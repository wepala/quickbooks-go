openapi: 3.0.3
info:
  title: QuickBooks Online API Collections
  description: |-
    The QuickBooks Online Accounting API is a RESTful API that is used to access QuickBooks companies.

    Docs Ref - https://developer.intuit.com/docs/api/accounting
  version: 1.0.0
  contact: { }
servers:
  - url: https://quickbooks.api.intuit.com
    description: Production Server
  - url: https://sandbox-quickbooks.api.intuit.com
    description: Sandbox Server
paths:
  /v3/company/{companyid}/account:
    post:
      tags:
        - Account
      summary: Account-Create
      description: Create a new Account
      operationId: accountCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountSubType:
                  type: string
                  example: AccountsReceivable
                AccountType:
                  type: string
                  example: Accounts Receivable
                Active:
                  type: boolean
                  example: true
                Classification:
                  type: string
                  example: Asset
                CurrencyRef:
                  type: object
                  properties:
                    name:
                      type: string
                      example: United States Dollar
                    value:
                      type: string
                      example: USD
                CurrentBalance:
                  type: number
                  example: 0
                CurrentBalanceWithSubAccounts:
                  type: number
                  example: 0
                FullyQualifiedName:
                  type: string
                  example: AR3-Updated
                Id:
                  type: string
                  example: '94'
                Name:
                  type: string
                  example: AR3-Updated111
                SubAccount:
                  type: boolean
                  example: false
                SyncToken:
                  type: string
                  example: '3'
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Account-Create:
                value:
                  AccountType: Accounts Receivable
                  Name: AR4
              Account-Update:
                value:
                  AccountSubType: AccountsReceivable
                  AccountType: Accounts Receivable
                  Active: true
                  Classification: Asset
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CurrentBalance: 0
                  CurrentBalanceWithSubAccounts: 0
                  FullyQualifiedName: AR3-Updated
                  Id: '94'
                  Name: AR3-Updated111
                  SubAccount: false
                  SyncToken: '3'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/account/{id}:
    get:
      tags:
        - Account
      summary: Account-ReadById
      description: Get the Account which has accountId as 1
      operationId: accountReadbyid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/query:
    post:
      tags:
        - VendorCredit
      summary: Account-ReadAll
      description: |-
        Get all customer records using generic 'Query' endpoint.
        Method - POST
      operationId: accountReadall
      parameters:
        - name: query
          in: query
          schema:
            type: string
            example: select * from exchangerate where sourcecurrencycode in ('EUR', 'INR') and asofdate='2017-07-07'
      requestBody:
        content:
          text/plain:
            examples:
              Account-ReadAll:
                value: |
                  Select * from Account STARTPOSITION 1 MAXRESULTS 5
              Attachable-ReadAll:
                value: Select * from Attachable
              Bill-GetAll:
                value: Select * from Bill startposition 1 maxresults 5
              BillPayment-ReadAll:
                value: Select * from BillPayment startposition 1 maxresults 5
              Budget-ReadAll:
                value: Select * from Budget startposition 1 maxresults 5
              Class-ReadAll:
                value: Select * from Class startposition 1 maxresults 5
              CompanyInfo-Read:
                value: Select * from CompanyInfo
              CreditMemo-ReadAll:
                value: Select * from CreditMemo startposition 1 maxresults 5
              Customer-ReadAll:
                value: Select * from Customer startposition 1 maxresults 5
              Department-ReadAll:
                value: Select * from Department startposition 1 maxresults 5
              Deposit-ReadAll:
                value: select * from Deposit startposition 1 maxresults 5
              Employee-ReadAll:
                value: select * from employee startposition 1 maxresults 5
              Estimate-ReadAll:
                value: select * from estimate startposition 1 maxresults 5
              ExchangeRate - Query:
                value: select * from exchangerate where sourcecurrencycode in ('USD', 'INR') and asofdate='2016-07-07'
              Invoice-ReadAll:
                value: select * from invoice startposition 1 maxresults 5
              Item-ReadAll:
                value: select * from item startposition 1 maxresults 5
              JournalEntry-ReadAll:
                value: select * from journalentry startposition 1 maxresults 5
              Payment-ReadAll:
                value: select * from payment startposition 1 maxresults 5
              PaymentMethod-ReadAll:
                value: select * from paymentmethod startposition 1 maxresults 5
              Preference-ReadAll:
                value: 'select * from preferences '
              Purchase-ReadAll:
                value: select * from purchase startposition 1 maxresults 5
              PurchaseOrder-ReadAll:
                value: select * from purchaseorder startposition 1 maxresults 5
              RefundReceipt-ReadAll:
                value: select * from refundreceipt startposition 1 maxresults 5
              SalesrRceipt-ReadAll:
                value: select * from salesreceipt startposition 1 maxresults 5
              TaxAgency-ReadAll:
                value: select * from taxagency startposition 1 maxresults 5
              TaxCode-ReadAll:
                value: select * from taxcode startposition 1 maxresults 5
              TaxRate-ReadAll:
                value: select * from taxrate startposition 1 maxresults 5
              Term-ReadAll:
                value: select * from term startposition 1 maxresults 5
              TimeActivity-ReadAll:
                value: select * from timeactivity startposition 1 maxresults 5
              Transfer-ReadAll:
                value: select * from transfer startposition 1 maxresults 5
              Vendor-ReadAll:
                value: select * from vendor startposition 1 maxresults 5
              VendorCredit-ReadAll:
                value: select * from vendorcredit startposition 1 maxresults 5
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/attachable:
    post:
      tags:
        - Attachable
      summary: Attachable-Create
      description: |-
        Create an attachable object
        Conent-Type:application/json
        Method - POST
      operationId: attachableCreate
      parameters:
        - name: operation
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AttachableRef:
                  type: array
                  items:
                    type: object
                    properties:
                      EntityRef:
                        type: object
                        properties:
                          type:
                            type: string
                            example: Invoice
                          value:
                            type: string
                            example: '130'
                      IncludeOnSend:
                        type: boolean
                        example: false
                  example:
                    - EntityRef:
                        type: Invoice
                        value: '130'
                      IncludeOnSend: false
                Id:
                  type: string
                  example: '5000000000000029383'
                MetaData:
                  type: object
                  properties:
                    CreateTime:
                      type: string
                      example: '2016-08-18T00:18:04-07:00'
                    LastUpdatedTime:
                      type: string
                      example: '2016-08-18T00:18:04-07:00'
                Note:
                  type: string
                  example: This is an attached note. Updated1
                SyncToken:
                  type: string
                  example: '2'
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Attachable-Create:
                value:
                  AttachableRef:
                    - EntityRef:
                        type: Invoice
                        value: '130'
                      IncludeOnSend: 'false'
                  Note: This is an attached note.
              Attachable-Delete:
                value:
                  AttachableRef:
                    - EntityRef:
                        type: Invoice
                        value: '130'
                      IncludeOnSend: false
                  Id: '5000000000000029383'
                  MetaData:
                    CreateTime: '2016-08-18T00:18:04-07:00'
                    LastUpdatedTime: '2016-08-18T00:18:04-07:00'
                  Note: This is an attached note. Updated1
                  SyncToken: '2'
                  domain: QBO
                  sparse: false
              Attachable-Update:
                value:
                  AttachableRef:
                    - EntityRef:
                        type: Invoice
                        value: '130'
                      IncludeOnSend: false
                  Id: '5000000000000029383'
                  MetaData:
                    CreateTime: '2016-08-18T00:18:04-07:00'
                    LastUpdatedTime: '2016-08-18T00:18:04-07:00'
                  Note: This is an attached note. Updated
                  SyncToken: '0'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/attachable/{id}:
    get:
      tags:
        - Attachable
      summary: Attachable-ReadById
      description: |-
        Retrieve an attachable object by Id
        Accept:application/json
        Method - GET
      operationId: attachableReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/upload:
    post:
      tags:
        - Attachable
      summary: Upload-Attachments
      description: |-
        Uploading and linking new attachments

        https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/attachments#Uploading_and_linking_new_attachments

        If the attachment is not in the Attachment list already, it's possible to upload it and link it to the object in one multipart operation.

        Operation:      POST https://quickbooks.api.intuit.com/v3/company/companyID/upload
        Content type: multipart/form-data

        Request body

        The following sample code shows the multipart request body for uploading a file and its supporting Attachable metatdata object, with the result of it being both added to the Attachment list and added to the object.

        The Attachable object accompanying this request supplies metadata and object information to which the attachment is linked. 
        Each part of the multipart request is separated by a boundary.  In the sample below, the string  --YOjcLaTlykb6OxfYJx4O07j1MweeMFem is used.  You can use any random and unique string.
        The file to be uploaded and its Attachable object are paired together via the name parameter in the part header for each one.
        The name parameter for the file part is of the form file_content_nn, where nn is a unique index number among the set of files being uploaded.
        The name parameter for the Attachable object is of the form file_metadata_nn, where nn corresponds to the file index number used with the content .
        The file or files are stored in the Attachment list with the name specified by the filename parameter.
        If the data supplied with the Attachable object cannot be validated, an error is returned and the file is not uploaded.
      operationId: uploadAttachments
      requestBody:
        content:
          text/plain:
            examples:
              Upload-Attachments:
                value: |-
                  --37a1965f87babd849241a530ad71e169
                  Content-Disposition: form-data; name="file_metadata_0"
                  Content-Type: application/json; charset=UTF-8
                  Content-Transfer-Encoding: 8bit

                  {
                      "AttachableRef": [
                      {
                        "EntityRef": {
                          "type": "Invoice",
                          "value": "173"
                        }
                      }
                    ],
                     "FileName": "receipt_nov15.jpg",
                      "ContentType": "image/jpg"
                    }
                  --37a1965f87babd849241a530ad71e169
                  Content-Disposition: form-data; name="file_content_0"; filename="398535758.jpg"
                  Content-Type: image/jpeg
                  Content-Transfer-Encoding: base64

                  /9j/4AAQSkZJRgABAQEAlgCWAAD/4ge4SUNDX1BST0ZJTEUAAQEAAAeoYXBwbAIgAABtbnRyUkdC
                  IFhZWiAH2QACABkACwAaAAthY3NwQVBQTAAAAABhcHBsAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAA
                  AADTLWFwcGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtk
                  ZXNjAAABCAAAAG9kc2NtAAABeAAABWxjcHJ0AAAG5AAAADh3dHB0AAAHHAAAABRyWFlaAAAHMAAA
                  ABRnWFlaAAAHRAAAABRiWFlaAAAHWAAAABRyVFJDAAAHbAAAAA5jaGFkAAAHfAAAACxiVFJDAAAH
                  bAAAAA5nVFJDAAAHbAAAAA5kZXNjAAAAAAAAABRHZW5lcmljIFJHQiBQcm9maWxlAAAAAAAAAAAA
                  AAAUR2VuZXJpYyBSR0IgUHJvZmlsZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
                  AAAAAAAAAAAAAAAAAAAAbWx1YwAAAAAAAAAeAAAADHNrU0sAAAAoAAABeGhySFIAAAAoAAABoGNh
                  RVMAAAAkAAAByHB0QlIAAAAmAAAB7HVrVUEAAAAqAAACEmZyRlUAAAAoAAACPHpoVFcAAAAWAAAC
                  ZGl0SVQAAAAoAAACem5iTk8AAAAmAAAComtvS1IAAAAWAAACyGNzQ1oAAAAiAAAC3mhlSUwAAAAe
                  AAADAGRlREUAAAAsAAADHmh1SFUAAAAoAAADSnN2U0UAAAAmAAAConpoQ04AAAAWAAADcmphSlAA
                  AAAaAAADiHJvUk8AAAAkAAADomVsR1IAAAAiAAADxnB0UE8AAAAmAAAD6G5sTkwAAAAoAAAEDmVz
                  RVMAAAAmAAAD6HRoVEgAAAAkAAAENnRyVFIAAAAiAAAEWmZpRkkAAAAoAAAEfHBsUEwAAAAsAAAE
                  pHJ1UlUAAAAiAAAE0GFyRUcAAAAmAAAE8mVuVVMAAAAmAAAFGGRhREsAAAAuAAAFPgBWAWEAZQBv
                  AGIAZQBjAG4A/QAgAFIARwBCACAAcAByAG8AZgBpAGwARwBlAG4AZQByAGkBDQBrAGkAIABSAEcA
                  QgAgAHAAcgBvAGYAaQBsAFAAZQByAGYAaQBsACAAUgBHAEIAIABnAGUAbgDoAHIAaQBjAFAAZQBy
                  AGYAaQBsACAAUgBHAEIAIABHAGUAbgDpAHIAaQBjAG8EFwQwBDMEMAQ7BEwEPQQ4BDkAIAQ/BEAE
                  PgREBDAEOQQ7ACAAUgBHAEIAUAByAG8AZgBpAGwAIABnAOkAbgDpAHIAaQBxAHUAZQAgAFIAVgBC
                  kBp1KAAgAFIARwBCACCCcl9pY8+P8ABQAHIAbwBmAGkAbABvACAAUgBHAEIAIABnAGUAbgBlAHIA
                  aQBjAG8ARwBlAG4AZQByAGkAcwBrACAAUgBHAEIALQBwAHIAbwBmAGkAbMd8vBgAIABSAEcAQgAg
                  1QS4XNMMx3wATwBiAGUAYwBuAP0AIABSAEcAQgAgAHAAcgBvAGYAaQBsBeQF6AXVBeQF2QXcACAA
                  UgBHAEIAIAXbBdwF3AXZAEEAbABsAGcAZQBtAGUAaQBuAGUAcwAgAFIARwBCAC0AUAByAG8AZgBp
                  AGwAwQBsAHQAYQBsAOEAbgBvAHMAIABSAEcAQgAgAHAAcgBvAGYAaQBsZm6QGgAgAFIARwBCACBj
                  z4/wZYdO9k4AgiwAIABSAEcAQgAgMNcw7TDVMKEwpDDrAFAAcgBvAGYAaQBsACAAUgBHAEIAIABn
                  AGUAbgBlAHIAaQBjA5MDtQO9A7kDugPMACADwAPBA78DxgOvA7sAIABSAEcAQgBQAGUAcgBmAGkA
                  bAAgAFIARwBCACAAZwBlAG4A6QByAGkAYwBvAEEAbABnAGUAbQBlAGUAbgAgAFIARwBCAC0AcABy
                  AG8AZgBpAGUAbA5CDhsOIw5EDh8OJQ5MACAAUgBHAEIAIA4XDjEOSA4nDkQOGwBHAGUAbgBlAGwA
                  IABSAEcAQgAgAFAAcgBvAGYAaQBsAGkAWQBsAGUAaQBuAGUAbgAgAFIARwBCAC0AcAByAG8AZgBp
                  AGkAbABpAFUAbgBpAHcAZQByAHMAYQBsAG4AeQAgAHAAcgBvAGYAaQBsACAAUgBHAEIEHgQxBEkE
                  OAQ5ACAEPwRABD4ERAQ4BDsETAAgAFIARwBCBkUGRAZBACAGKgY5BjEGSgZBACAAUgBHAEIAIAYn
                  BkQGOQYnBkUARwBlAG4AZQByAGkAYwAgAFIARwBCACAAUAByAG8AZgBpAGwAZQBHAGUAbgBlAHIA
                  ZQBsACAAUgBHAEIALQBiAGUAcwBrAHIAaQB2AGUAbABzAGV0ZXh0AAAAAENvcHlyaWdodCAyMDA3
                  IEFwcGxlIEluYy4sIGFsbCByaWdodHMgcmVzZXJ2ZWQuAFhZWiAAAAAAAADzUgABAAAAARbPWFla
                  IAAAAAAAAHRNAAA97gAAA9BYWVogAAAAAAAAWnUAAKxzAAAXNFhZWiAAAAAAAAAoGgAAFZ8AALg2
                  Y3VydgAAAAAAAAABAc0AAHNmMzIAAAAAAAEMQgAABd7///MmAAAHkgAA/ZH///ui///9owAAA9wA
                  AMBs/+EAgEV4aWYAAE1NACoAAAAIAAUBEgADAAAAAQABAAABGgAFAAAAAQAAAEoBGwAFAAAAAQAA
                  AFIBKAADAAAAAQACAACHaQAEAAAAAQAAAFoAAAAAAAA6mQAAAGQAADqZAAAAZAACoAIABAAAAAEA
                  AAAuoAMABAAAAAEAAAAUAAAAAP/bAEMAAgEBAgEBAgIBAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYG
                  BgcICwkHCAoIBgYJDQkKCwsMDAwHCQ0ODQwOCwwMC//bAEMBAgICAwIDBQMDBQsIBggLCwsLCwsL
                  CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLC//AABEIABQALgMBIgAC
                  EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAA
                  AX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4
                  OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaan
                  qKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQAD
                  AQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG
                  EkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT
                  VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4
                  ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APkb41eO
                  NYtfi94oSDVdRVF1a74FzJgfvn96j+Kmj+O/gj/wj3/C159Q0MeK9Et/EekmfU1IvdPuN/kzrtkO
                  0N5b/K2GGOQKzvjnz8YPFX/YVvP/AEc9fePiv9qXwn4K+Eut674A8S+Br3xl4e/Zd8MaZ4dF0LPU
                  HtvENte3TtbwwThla8h3RuYipI+UspFfueIryw6p8kOa+n5Ja62310Z+V4XDRxU5RlPl8z4O0S/8
                  YeJfB+t+IfD1xrN7oPhpbZtV1GG7ZrXTxczeRb+bJvwDLLlEAyWYHA4OK/hTxP4i8ceKdI0Xwrq9
                  1eanr13FY6fANS2fappZFjRVdnCgF2UFiQozkkDmv0r+KX7VPhO/8JftJaX8I/HPwu0qXxf4c8C+
                  JZIA1hDb63cpldfjtwI2WS7NvFGnkINyyMpXY7Fqq/GDUvhB4d+IXxP17TPHvwc1nTfiB8a/h/4o
                  0O10zVbW4lstChubNbxpoto+zxARztLHyAgZnADc8NPN5ydpUbXtbfqob6dOZ9vha8zu/smElpXX
                  W+3eW2vku+5+fXjvw38RPhlZm58eRa7ptp/a97oCXT3m+3nv7Jtt3BDKkhWUwtwzISgPG4mux/ZD
                  8Y6tefEO++06nqL7dOkxm6k4/exf7VfRX/BRD9oTTfiz+xBaaD8NPGfgK803wz8XvFf2nRLOWzjv
                  30+XU5pNKntIUQSPbeU+8yxkKUK7i+AB8x/sc/8AJQ7/AP7Bz/8Ao2KuqlWnicLOdSKTu1b0em/d
                  anFVpRw+IjCnK60d/X0O/wDil+zfoWofE7xJNcXOqb31W7JxJHj/AF7/APTOsH/hmPw//wA/Gqf9
                  /I//AI3RRXRTk+VamM4rmegv/DMfh/H/AB8ap/38j/8AjdB/Zj8Pn/l41Trn/WR9f+/dFFVzPuRZ
                  XEP7Mfh89bjVOP8AppFx/wCQ69I/Zf8A2d9F0z4hXP2S61Qb9Olzl4z0lh/6Z+9FFY4mT9lLU1oJ
                  c6P/2Q==

                  --37a1965f87babd849241a530ad71e169--
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/batch:
    post:
      tags:
        - Batch
      summary: Batch
      description: |-
        Multiple operations using batch query
        Content-Type:application/json
        Method - POST
      operationId: batch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                BatchItemRequest:
                  type: array
                  items:
                    type: object
                    properties:
                      Invoice:
                        type: object
                        properties:
                          Id:
                            type: string
                            example: '129'
                          SyncToken:
                            type: string
                            example: '0'
                      Query:
                        type: string
                        example: select * from SalesReceipt
                      SalesReceipt:
                        type: object
                        properties:
                          Id:
                            type: string
                            example: '11'
                          PrivateNote:
                            type: string
                            example: A private note.
                          SyncToken:
                            type: string
                            example: '0'
                          domain:
                            type: string
                            example: QBO
                          sparse:
                            type: boolean
                            example: true
                      Vendor:
                        type: object
                        properties:
                          DisplayName:
                            type: string
                            example: Smith Family Store
                      bId:
                        type: string
                        example: bid1
                      operation:
                        type: string
                        example: create
                  example:
                    - Vendor:
                        DisplayName: Smith Family Store
                      bId: bid1
                      operation: create
                    - Invoice:
                        Id: '129'
                        SyncToken: '0'
                      bId: bid2
                      operation: delete
                    - SalesReceipt:
                        Id: '11'
                        PrivateNote: A private note.
                        SyncToken: '0'
                        domain: QBO
                        sparse: true
                      bId: bid3
                      operation: update
                    - Query: select * from SalesReceipt
                      bId: bid4
            examples:
              Batch:
                value:
                  BatchItemRequest:
                    - Vendor:
                        DisplayName: Smith Family Store
                      bId: bid1
                      operation: create
                    - Invoice:
                        Id: '129'
                        SyncToken: '0'
                      bId: bid2
                      operation: delete
                    - SalesReceipt:
                        Id: '11'
                        PrivateNote: A private note.
                        SyncToken: '0'
                        domain: QBO
                        sparse: true
                      bId: bid3
                      operation: update
                    - Query: select * from SalesReceipt
                      bId: bid4
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/bill:
    post:
      tags:
        - Bill
      summary: Bill-Create
      description: |-
        Create a bill
        Content-Type:application/json
        Method - POST
      operationId: billCreate
      parameters:
        - name: operation
          in: query
          required: false
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '149'
                SyncToken:
                  type: string
                  example: '0'
            examples:
              Bill-Create:
                value:
                  Line:
                    - AccountBasedExpenseLineDetail:
                        AccountRef:
                          value: '7'
                      Amount: 200
                      DetailType: AccountBasedExpenseLineDetail
                      Id: '1'
                  VendorRef:
                    value: '56'
              Bill-Delete:
                value:
                  Id: '149'
                  SyncToken: '0'
              Bill-Update:
                value:
                  Line:
                    - AccountBasedExpenseLineDetail:
                        AccountRef:
                          value: '7'
                      Amount: 240.67
                      DetailType: AccountBasedExpenseLineDetail
                      Id: '1'
                  VendorRef:
                    value: '56'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/bill/{id}:
    get:
      tags:
        - Bill
      summary: Bill-GetById
      description: |-
        Retrieve a bill by Id
        Accept:application/json
        Method - GET
      operationId: billGetbyid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/billpayment:
    post:
      tags:
        - BillPayment
      summary: BillPayment-Create
      description: |-
        Create a BillPayment against a pre-created bill
        Content-Type:application/json
        Method - POST
      operationId: billpaymentCreate
      parameters:
        - name: operation
          in: query
          required: false
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                CheckPayment:
                  type: object
                  properties:
                    BankAccountRef:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Checking
                        value:
                          type: string
                          example: '35'
                Line:
                  type: array
                  items:
                    type: object
                    properties:
                      Amount:
                        type: number
                        example: 100
                      LinkedTxn:
                        type: array
                        items:
                          type: object
                          properties:
                            TxnId:
                              type: string
                              example: '153'
                            TxnType:
                              type: string
                              example: Bill
                        example:
                          - TxnId: '153'
                            TxnType: Bill
                  example:
                    - Amount: 100
                      LinkedTxn:
                        - TxnId: '153'
                          TxnType: Bill
                PayType:
                  type: string
                  example: Check
                PrivateNote:
                  type: string
                  example: Updated Note
                TotalAmt:
                  type: number
                  example: 100
                VendorRef:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Test
                    value:
                      type: string
                      example: '62'
            examples:
              BillPayment-Create:
                value:
                  CheckPayment:
                    BankAccountRef:
                      name: Checking
                      value: '35'
                  Line:
                    - Amount: 100
                      LinkedTxn:
                        - TxnId: '153'
                          TxnType: Bill
                  PayType: Check
                  PrivateNote: Acct. 1JK90
                  TotalAmt: 100
                  VendorRef:
                    name: Test
                    value: '62'
              BillPayment-Delete:
                value:
                  Id: '154'
                  SyncToken: '0'
              BillPayment-Update:
                value:
                  CheckPayment:
                    BankAccountRef:
                      name: Checking
                      value: '35'
                  Line:
                    - Amount: 100
                      LinkedTxn:
                        - TxnId: '153'
                          TxnType: Bill
                  PayType: Check
                  PrivateNote: Updated Note
                  TotalAmt: 100
                  VendorRef:
                    name: Test
                    value: '62'
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/billpayment/{id}:
    get:
      tags:
        - BillPayment
      summary: BillPayment-ReadById
      description: |-
        Retrieve BillPayment by Id
        Method - GET
      operationId: billpaymentReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/cdc:
    get:
      tags:
        - ChangeDataCapture
      summary: CDC-Read
      description: |-
        Retrive changed Bill and invoice objects since Aug10,2016
        Method - GET
      operationId: cdcRead
      parameters:
        - name: entities
          in: query
          schema:
            type: string
            example: bill,invoice
        - name: changedSince
          in: query
          schema:
            type: string
            example: '2016-08-10'
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/class:
    post:
      tags:
        - Class
      summary: Class-Create
      description: |-
        Create a Class object
        Method - POST
      operationId: classCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '5000000000000018727'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Class-Create:
                value:
                  Name: France
              Class-Delete:
                value:
                  Id: '5000000000000018727'
                  SyncToken: '1'
              Class-Update:
                value:
                  Active: true
                  FullyQualifiedName: France
                  Id: '5000000000000018727'
                  Name: France-I
                  SubClass: false
                  SyncToken: '0'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/class/{id}:
    get:
      tags:
        - Class
      summary: Class-ReadById
      description: |-
        Read a Class object by Id
        Method - GET
      operationId: classReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/companyinfo/{companyID}:
    get:
      tags:
        - CompanyInfo
      summary: CompanyInfo-ReadById
      description: 'Method : GET'
      operationId: companyinfoReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: companyID
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/creditmemo:
    post:
      tags:
        - CreditMemo
      summary: CreditMemo-Create
      description: |-
        Create a credit memo
        Method : POST
      operationId: creditmemoCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '160'
                SyncToken:
                  type: string
                  example: '2'
            examples:
              CreditMemo-Create:
                value:
                  CustomerRef:
                    name: CoolCars
                    value: '3'
                  Line:
                    - Amount: 50
                      DetailType: SalesItemLineDetail
                      SalesItemLineDetail:
                        ItemRef:
                          name: Concrete
                          value: '3'
              CreditMemo-Delete:
                value:
                  Id: '160'
                  SyncToken: '2'
              CreditMemo-Update:
                value:
                  ApplyTaxAfterDiscount: false
                  Balance: 50
                  BillAddr:
                    City: Half Moon Bay
                    CountrySubDivisionCode: CA
                    Id: '4'
                    Lat: '37.4300318'
                    Line1: 65 Ocean Dr.
                    Long: '-122.4336537'
                    PostalCode: '94213'
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomField:
                    - DefinitionId: '1'
                      Name: 'Crew #'
                      Type: StringType
                  CustomerRef:
                    name: Cool Cars
                    value: '3'
                  DocNumber: 1040-Updated
                  EmailStatus: NotSet
                  ExchangeRate: 1
                  HomeTotalAmt: 50
                  Id: '160'
                  Line:
                    - Amount: 50
                      DetailType: SalesItemLineDetail
                      Id: '1'
                      LineNum: 1
                      SalesItemLineDetail:
                        ItemRef:
                          name: Concrete
                          value: '3'
                        TaxCodeRef:
                          value: NON
                    - Amount: 50
                      DetailType: SubTotalLineDetail
                      SubTotalLineDetail: { }
                  MetaData:
                    CreateTime: '2016-08-18T13:09:52-07:00'
                    LastUpdatedTime: '2016-08-18T13:09:52-07:00'
                  PrintStatus: NeedToPrint
                  RemainingCredit: 50
                  ShipAddr:
                    City: Half Moon Bay
                    CountrySubDivisionCode: CA
                    Id: '4'
                    Lat: '37.4300318'
                    Line1: 65 Ocean Dr.
                    Long: '-122.4336537'
                    PostalCode: '94213'
                  SyncToken: '0'
                  TotalAmt: 50
                  TxnDate: '2016-08-18'
                  TxnTaxDetail:
                    TotalTax: 0
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/creditmemo/{id}:
    get:
      tags:
        - CreditMemo
      summary: CreditMemo-ReadById
      description: |-
        Read a credit memo by Id
        Method : GET
      operationId: creditmemoReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/customer:
    post:
      tags:
        - Customer
      summary: Customer-Create
      description: |-
        Create a customer
        Method : POST
      operationId: customerCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                DisplayName:
                  type: string
                  example: King's Groceries1
                Suffix:
                  type: string
                  example: Jr.
                Title:
                  type: string
                  example: Mr.
                MiddleName:
                  type: string
                  example: B
                FamilyName:
                  type: string
                  example: Drew
                GivenName:
                  type: string
                  example: John
                PrimaryEmailAddr:
                  type: object
                  properties:
                    Address:
                      type: string
                      example:
                Notes:
                  type: string
                  example: Here are other details.
                PrimaryPhone:
                  type: object
                  properties:
                    FreeFormNumber:
                      type: string
                      example: (555) 555-5555
                BillAddr:
                  type: object
                  properties:
                    Line1:
                      type: string
                      example: 123 Main Street
                    City:
                      type: string
                      example: Mountain View
                    Country:
                      type: string
                      example: USA
                    CountrySubDivisionCode:
                      type: string
                      example: CA
                    PostalCode:
                      type: string
                      example: '94042'
            examples:
              Customer-Create:
                value:
                  BillAddr:
                    City: Mountain View
                    Country: USA
                    CountrySubDivisionCode: CA
                    Line1: 123 Main Street
                    PostalCode: '94042'
                  DisplayName: King's Groceries1
                  Notes: Here are other details.
                  PrimaryEmailAddr:
                    Address: jdrew@myemail.com
                  PrimaryPhone:
                    FreeFormNumber: (555) 555-5555
              Customer-Delete:
                value:
                  Active: false
                  Id: '67'
                  SyncToken: '0'
                  domain: QBO
                  sparse: true
              Customer-Update:
                value:
                  Active: true
                  Balance: 0
                  BalanceWithJobs: 0
                  BillAddr:
                    City: Mountain View
                    Country: USA
                    CountrySubDivisionCode: CA
                    Id: '100'
                    Line1: 123 Main Street
                    PostalCode: '94042'
                  BillWithParent: false
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  DefaultTaxCodeRef:
                    value: '2'
                  DisplayName: King's Groceries-Updated
                  FullyQualifiedName: King's Groceries-Updated
                  Id: '63'
                  Job: false
                  Notes: Here are other details.
                  PreferredDeliveryMethod: Print
                  PrimaryEmailAddr:
                    Address: jdrew@myemail.com
                  PrimaryPhone:
                    FreeFormNumber: (555) 555-5555
                  PrintOnCheckName: King's Groceries1
                  SyncToken: '2'
                  Taxable: true
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/customer/{id}:
    get:
      tags:
        - Customer
      summary: Customer-ReadById
      description: |-
        Read a customer entry by Id
        Method : GET
      operationId: customerReadbyid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/department:
    post:
      tags:
        - Department
      summary: Department-Create
      description: |-
        Create a department object
        Method : POST
      operationId: departmentCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Active:
                  type: boolean
                  example: false
                FullyQualifiedName:
                  type: string
                  example: Marketing Department
                Id:
                  type: string
                  example: '1'
                Name:
                  type: string
                  example: Marketing Department-Updated
                SubDepartment:
                  type: boolean
                  example: false
                SyncToken:
                  type: string
                  example: '2'
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Department-Create:
                value:
                  Name: Marketing Department
              Department-Delete:
                value:
                  Active: false
                  FullyQualifiedName: Marketing Department
                  Id: '1'
                  Name: Marketing Department-Updated
                  SubDepartment: false
                  SyncToken: '2'
                  domain: QBO
                  sparse: false
              Department-Update:
                value:
                  Active: true
                  FullyQualifiedName: Marketing Department
                  Id: '1'
                  Name: Marketing Department-Updated
                  SubDepartment: false
                  SyncToken: '0'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/department/{id}:
    get:
      tags:
        - Department
      summary: Department-ReadById
      description: |-
        Read a department object
        Method : GET
      operationId: departmentReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/deposit:
    post:
      tags:
        - Deposit
      summary: Deposit-Create
      description: |-
        Create a deposit object
        Method : POST
      operationId: depositCreate
      parameters:
        - name: operation
          in: query
          required: false
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '162'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Deposit-Create:
                value:
                  DepositToAccountRef:
                    name: Checking
                    value: '35'
                  Line:
                    - Amount: 20
                      DepositLineDetail:
                        AccountRef:
                          name: Unapplied Cash Payment Income
                          value: '87'
                      DetailType: DepositLineDetail
              Deposit-Delete:
                value:
                  Id: '162'
                  SyncToken: '1'
              Deposit-Update:
                value:
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  DepositToAccountRef:
                    name: Checking
                    value: '35'
                  ExchangeRate: 1
                  Id: '162'
                  Line:
                    - Amount: 205
                      DepositLineDetail:
                        AccountRef:
                          name: Unapplied Cash Payment Income
                          value: '87'
                      DetailType: DepositLineDetail
                      Id: '1'
                      LineNum: 1
                  SyncToken: '0'
                  TotalAmt: 205
                  TxnDate: '2016-08-18'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/deposit/{id}:
    get:
      tags:
        - Deposit
      summary: Deposit-ReadById
      description: |-
        Read a deposit object by Id
        Method : POST
      operationId: depositReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/employee:
    post:
      tags:
        - Employee
      summary: Employee-Create
      description: |+
        Create an employee object
        Method : POST

      operationId: employeeCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Active:
                  type: boolean
                  example: false
                BillableTime:
                  type: boolean
                  example: false
                DisplayName:
                  type: string
                  example: John Meuller - Updated
                FamilyName:
                  type: string
                  example: Meuller
                GivenName:
                  type: string
                  example: John
                Id:
                  type: string
                  example: '68'
                MetaData:
                  type: object
                  properties:
                    CreateTime:
                      type: string
                      example: '2016-08-18T16:04:16-07:00'
                    LastUpdatedTime:
                      type: string
                      example: '2016-08-18T16:04:16-07:00'
                PrimaryAddr:
                  type: object
                  properties:
                    City:
                      type: string
                      example: Middlefield
                    CountrySubDivisionCode:
                      type: string
                      example: CA
                    Id:
                      type: string
                      example: '105'
                    Line1:
                      type: string
                      example: 45 N. Elm Street
                    PostalCode:
                      type: string
                      example: '93242'
                PrimaryPhone:
                  type: object
                  properties:
                    FreeFormNumber:
                      type: string
                      example: 408-525-1234
                PrintOnCheckName:
                  type: string
                  example: John Meuller
                SSN:
                  type: string
                  example: XXX-XX-XXXX
                SyncToken:
                  type: string
                  example: '2'
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Employee-Create:
                value:
                  FamilyName: Meuller
                  GivenName: John
                  PrimaryAddr:
                    City: Middlefield
                    CountrySubDivisionCode: CA
                    Id: '50'
                    Line1: 45 N. Elm Street
                    PostalCode: '93242'
                  PrimaryPhone:
                    FreeFormNumber: 408-525-1234
                  SSN: 444-55-6666
              Employee-Delete:
                value:
                  Active: false
                  BillableTime: false
                  DisplayName: John Meuller - Updated
                  FamilyName: Meuller
                  GivenName: John
                  Id: '68'
                  MetaData:
                    CreateTime: '2016-08-18T16:04:16-07:00'
                    LastUpdatedTime: '2016-08-18T16:04:16-07:00'
                  PrimaryAddr:
                    City: Middlefield
                    CountrySubDivisionCode: CA
                    Id: '105'
                    Line1: 45 N. Elm Street
                    PostalCode: '93242'
                  PrimaryPhone:
                    FreeFormNumber: 408-525-1234
                  PrintOnCheckName: John Meuller
                  SSN: XXX-XX-XXXX
                  SyncToken: '2'
                  domain: QBO
                  sparse: false
              Employee-Update:
                value:
                  Active: true
                  BillableTime: false
                  DisplayName: John Meuller - Updated
                  FamilyName: Meuller
                  GivenName: John
                  Id: '68'
                  MetaData:
                    CreateTime: '2016-08-18T16:04:16-07:00'
                    LastUpdatedTime: '2016-08-18T16:04:16-07:00'
                  PrimaryAddr:
                    City: Middlefield
                    CountrySubDivisionCode: CA
                    Id: '105'
                    Line1: 45 N. Elm Street
                    PostalCode: '93242'
                  PrimaryPhone:
                    FreeFormNumber: 408-525-1234
                  PrintOnCheckName: John Meuller
                  SSN: XXX-XX-XXXX
                  SyncToken: '0'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/employee/{id}:
    get:
      tags:
        - Employee
      summary: Employee-ReadById
      description: |+
        Retrive an employee object by ID
        Method : GET

      operationId: employeeReadbyid
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/estimate:
    post:
      tags:
        - Estimate
      summary: Estimate-Create
      description: |
        Create an Estimate object
        Method : POST
      operationId: estimateCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '163'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Estimate-Create:
                value:
                  ApplyTaxAfterDiscount: false
                  BillEmail:
                    Address: Cool_Cars@intuit.com
                  CustomerMemo:
                    value: Thank you for your business and have a great day!
                  CustomerRef:
                    name: Cool Cars
                    value: '3'
                  EmailStatus: NotSet
                  Line:
                    - Amount: 35
                      Description: Pest Control Services
                      DetailType: SalesItemLineDetail
                      Id: '1'
                      LineNum: 1
                      SalesItemLineDetail:
                        ItemRef:
                          name: Pest Control
                          value: '10'
                        Qty: 1
                        TaxCodeRef:
                          value: NON
                        UnitPrice: 35
                    - Amount: 35
                      DetailType: SubTotalLineDetail
                      SubTotalLineDetail: { }
                    - Amount: 3.5
                      DetailType: DiscountLineDetail
                      DiscountLineDetail:
                        DiscountAccountRef:
                          name: Discounts given
                          value: '86'
                        DiscountPercent: 10
                        PercentBased: true
                  PrintStatus: NeedToPrint
                  TotalAmt: 31.5
                  TxnTaxDetail:
                    TotalTax: 0
              Estimate-Delete:
                value:
                  Id: '163'
                  SyncToken: '1'
              Estimate-Update:
                value:
                  ApplyTaxAfterDiscount: false
                  BillAddr:
                    City: Half Moon Bay
                    CountrySubDivisionCode: CA
                    Id: '4'
                    Lat: '37.4300318'
                    Line1: 65 Ocean Dr.
                    Long: '-122.4336537'
                    PostalCode: '94213'
                  BillEmail:
                    Address: Cool_Cars@intuit.com
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomField:
                    - DefinitionId: '1'
                      Name: 'Crew #'
                      Type: StringType
                  CustomerMemo:
                    value: Thank you for your business and have a great day!
                  CustomerRef:
                    name: Cool Cars
                    value: '3'
                  DocNumber: 1001-Updated
                  EmailStatus: NotSet
                  ExchangeRate: 1
                  HomeTotalAmt: 31.5
                  Id: '163'
                  Line:
                    - Amount: 35
                      Description: Pest Control Services
                      DetailType: SalesItemLineDetail
                      Id: '1'
                      LineNum: 1
                      SalesItemLineDetail:
                        ItemRef:
                          name: Pest Control
                          value: '10'
                        Qty: 1
                        TaxCodeRef:
                          value: NON
                        UnitPrice: 35
                    - Amount: 35
                      DetailType: SubTotalLineDetail
                      SubTotalLineDetail: { }
                    - Amount: 3.5
                      DetailType: DiscountLineDetail
                      DiscountLineDetail:
                        DiscountAccountRef:
                          name: Discounts given
                          value: '86'
                        DiscountPercent: 10
                        PercentBased: true
                  PrintStatus: NeedToPrint
                  ShipAddr:
                    City: Half Moon Bay
                    CountrySubDivisionCode: CA
                    Id: '4'
                    Lat: '37.4300318'
                    Line1: 65 Ocean Dr.
                    Long: '-122.4336537'
                    PostalCode: '94213'
                  SyncToken: '0'
                  TotalAmt: 31.5
                  TxnDate: '2016-08-18'
                  TxnStatus: Pending
                  TxnTaxDetail:
                    TotalTax: 0
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/estimate/{estimateId}:
    get:
      tags:
        - Estimate
      summary: Estimate-ReadById
      description: |
        Read an Estimate object by Id
        Method : POST
      operationId: estimateReadbyid
      parameters:
        - name: estimateId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/exchangerate:
    get:
      tags:
        - ExchangeRate
      summary: ExchangeRate - GetDetails
      description: |
        Get ExchangeRate
        Method : GET
      operationId: exchangerateGetdetails
      parameters:
        - name: sourcecurrencycode
          in: query
          schema:
            type: string
            example: USD
        - name: asofdate
          in: query
          schema:
            type: string
            example: '2017-04-25'
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/invoice:
    post:
      tags:
        - Invoice
      summary: Invoice-Create
      description: |
        Create an invoice object
        Method : POST
      operationId: invoiceCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
        - name: minorversion
          in: query
          schema:
            type: string
            example: '1'
            default: "73"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/invoice/{invoiceId}:
    get:
      tags:
        - Invoice
      summary: Invoice-ReadById
      description: |
        Read an invoice object by Id
      operationId: invoiceReadbyid
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/item:
    post:
      tags:
        - Item
      summary: Item-Create
      description: |
        Create an item object
        Method : POST
      operationId: itemCreate
      parameters:
        - name: minorversion
          in: query
          schema:
            type: string
            example: '1'
            default: "73"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/item/{id}:
    get:
      tags:
        - Item
      summary: Item-ReadById
      description: |
        Read an Item by Id
        Method : GET
      operationId: itemReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/journalentry:
    post:
      tags:
        - JournalEntry
      summary: JournalEntry-Create
      description: |
        Create an journalentry object
        Method : POST
      operationId: journalentryCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '167'
                SyncToken:
                  type: string
                  example: '0'
            examples:
              JournalEntry-Create:
                value:
                  Line:
                    - Amount: 100
                      Description: nov portion of rider insurance
                      DetailType: JournalEntryLineDetail
                      Id: '0'
                      JournalEntryLineDetail:
                        AccountRef:
                          name: Opening Bal Equity
                          value: '39'
                        PostingType: Debit
                    - Amount: 100
                      Description: nov portion of rider insurance
                      DetailType: JournalEntryLineDetail
                      JournalEntryLineDetail:
                        AccountRef:
                          name: Notes Payable
                          value: '44'
                        PostingType: Credit
              JournalEntry-Delete:
                value:
                  Id: '167'
                  SyncToken: '0'
              JournalEntry-Update:
                value:
                  Adjustment: false
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  ExchangeRate: 1
                  Id: '167'
                  Line:
                    - Amount: 100
                      Description: nov portion of rider insurance-updated
                      DetailType: JournalEntryLineDetail
                      Id: '0'
                      JournalEntryLineDetail:
                        AccountRef:
                          name: Truck:Depreciation
                          value: '39'
                        PostingType: Debit
                    - Amount: 100
                      Description: nov portion of rider insurance-updated
                      DetailType: JournalEntryLineDetail
                      Id: '1'
                      JournalEntryLineDetail:
                        AccountRef:
                          name: Notes Payable
                          value: '44'
                        PostingType: Credit
                  SyncToken: '0'
                  TxnDate: '2016-08-19'
                  TxnTaxDetail: { }
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/journalentry/{id}:
    get:
      tags:
        - JournalEntry
      summary: JournalEntry-ReadById
      description: |
        Read an journalentry object by Id
        Method : POST
      operationId: journalentryReadbyid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntry'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/payment:
    post:
      tags:
        - Payment
      summary: Payment-Create
      description: |
        Create an payment object
        Method : POST
      operationId: paymentCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '174'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Payment-Create:
                value:
                  CustomerRef:
                    name: TEST123
                    value: '58'
                  Line:
                    - Amount: 100
                      LinkedTxn:
                        - TxnId: '173'
                          TxnType: Invoice
                  TotalAmt: 100
              Payment-Delete:
                value:
                  Id: '174'
                  SyncToken: '1'
              Payment-Update:
                value:
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomerRef:
                    name: TEST123
                    value: '58'
                  DepositToAccountRef:
                    value: '4'
                  ExchangeRate: 1
                  Id: '174'
                  Line:
                    - Amount: 100
                      LineEx:
                        any:
                          - declaredType: com.intuit.schema.finance.v3.NameValue
                            globalScope: true
                            name: '{http://schema.intuit.com/finance/v3}NameValue'
                            nil: false
                            scope: javax.xml.bind.JAXBElement$GlobalScope
                            typeSubstituted: false
                            value:
                              Name: txnId
                              Value: '173'
                          - declaredType: com.intuit.schema.finance.v3.NameValue
                            globalScope: true
                            name: '{http://schema.intuit.com/finance/v3}NameValue'
                            nil: false
                            scope: javax.xml.bind.JAXBElement$GlobalScope
                            typeSubstituted: false
                            value:
                              Name: txnOpenBalance
                              Value: '100.00'
                          - declaredType: com.intuit.schema.finance.v3.NameValue
                            globalScope: true
                            name: '{http://schema.intuit.com/finance/v3}NameValue'
                            nil: false
                            scope: javax.xml.bind.JAXBElement$GlobalScope
                            typeSubstituted: false
                            value:
                              Name: txnReferenceNumber
                              Value: '1043'
                      LinkedTxn:
                        - TxnId: '173'
                          TxnType: Invoice
                  ProcessPayment: false
                  SyncToken: '0'
                  TotalAmt: 100
                  TxnDate: '2016-08-29'
                  UnappliedAmt: 0
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/payment/{id}:
    get:
      tags:
        - Payment
      summary: Payment-ReadByID
      description: |
        Read a payment object by Id
        Method : GET
      operationId: paymentReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/paymentmethod:
    post:
      tags:
        - PaymentMethod
      summary: PaymentMethod-Create
      description: |
        Create a payment method
        Method : POST
      operationId: paymentmethodCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Active:
                  type: boolean
                  example: false
                Id:
                  type: string
                  example: '8'
                MetaData:
                  type: object
                  properties:
                    CreateTime:
                      type: string
                      example: '2016-08-23T20:09:50-07:00'
                    LastUpdatedTime:
                      type: string
                      example: '2016-08-23T20:09:50-07:00'
                Name:
                  type: string
                  example: Business Check-Updated
                SyncToken:
                  type: string
                  example: '0'
                Type:
                  type: string
                  example: NON_CREDIT_CARD
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              PaymentMethod-Create:
                value:
                  Name: Business Check
              PaymentMethod-Delete:
                value:
                  Active: false
                  Id: '8'
                  MetaData:
                    CreateTime: '2016-08-23T20:09:50-07:00'
                    LastUpdatedTime: '2016-08-23T20:09:50-07:00'
                  Name: Business Check-Updated
                  SyncToken: '0'
                  Type: NON_CREDIT_CARD
                  domain: QBO
                  sparse: false
              PaymentMethod-Update:
                value:
                  Active: true
                  Id: '8'
                  MetaData:
                    CreateTime: '2016-08-23T20:09:50-07:00'
                    LastUpdatedTime: '2016-08-23T20:09:50-07:00'
                  Name: Business Check-Updated
                  SyncToken: '0'
                  Type: NON_CREDIT_CARD
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/paymentmethod/{id}:
    get:
      tags:
        - PaymentMethod
      summary: PaymentMethod-ReadById
      description: |
        Read a payment method
        Method : GET
      operationId: paymentmethodReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/preferences:
    get:
      tags:
        - Preferences
      summary: Preference-Read
      description: |
        Read the preference object
        Method : POST
      operationId: preferenceRead
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  Preferences:
                    $ref: '#/components/schemas/Preferences'
    post:
      tags:
        - Preferences
      summary: Preference-Update
      description: |
        Update the preference object endpoint
        Method : POST
      operationId: preferenceUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountingInfoPrefs:
                  type: object
                  properties:
                    ClassTrackingPerTxn:
                      type: boolean
                      example: false
                    ClassTrackingPerTxnLine:
                      type: boolean
                      example: true
                    CustomerTerminology:
                      type: string
                      example: Customers
                    DepartmentTerminology:
                      type: string
                      example: Location
                    TrackDepartments:
                      type: boolean
                      example: true
                CurrencyPrefs:
                  type: object
                  properties:
                    HomeCurrency:
                      type: object
                      properties:
                        value:
                          type: string
                          example: USD
                    MultiCurrencyEnabled:
                      type: boolean
                      example: true
                EmailMessagesPrefs:
                  type: object
                  properties:
                    EstimateMessage:
                      type: object
                      properties:
                        Message:
                          type: string
                          example: |-
                            Please review the estimate below.  Feel free to contact us if you have any questions.
                            We look forward to working with you.

                            Sincerely,
                            Craig's Design and Landscaping Services
                        Subject:
                          type: string
                          example: Estimate from Craig's Design and Landscaping Services
                    InvoiceMessage:
                      type: object
                      properties:
                        Message:
                          type: string
                          example: |-
                            Your invoice is attached.  Please remit payment at your earliest convenience.
                            Thank you for your business - we appreciate it very much.

                            Sincerely,
                            Craig's Design and Landscaping Services
                        Subject:
                          type: string
                          example: Invoice from Craig's Design and Landscaping Services
                    SalesReceiptMessage:
                      type: object
                      properties:
                        Message:
                          type: string
                          example: |-
                            Your sales receipt is attached.
                            Thank you for your business - we appreciate it very much.

                            Sincerely,
                            Craig's Design and Landscaping Services
                        Subject:
                          type: string
                          example: Sales Receipt from Craig's Design and Landscaping Services
                    StatementMessage:
                      type: object
                      properties:
                        Message:
                          type: string
                          example: |-
                            Your statement is attached.  Please remit payment at your earliest convenience.
                            Thank you for your business - we appreciate it very much.

                            Sincerely,
                            Craig's Design and Landscaping Services
                        Subject:
                          type: string
                          example: Statement from Craig's Design and Landscaping Services
                Id:
                  type: string
                  example: '1'
                MetaData:
                  type: object
                  properties:
                    CreateTime:
                      type: string
                      example: '2016-01-13T01:07:08-08:00'
                    LastUpdatedTime:
                      type: string
                      example: '2016-08-23T20:12:45-07:00'
                OtherPrefs:
                  type: object
                  properties:
                    NameValue:
                      type: array
                      items:
                        type: object
                        properties:
                          Name:
                            type: string
                            example: SalesFormsPrefs.DefaultCustomerMessage
                          Value:
                            type: string
                            example: Thank you for your business and have a great day!
                      example:
                        - Name: SalesFormsPrefs.DefaultCustomerMessage
                          Value: Thank you for your business and have a great day!
                        - Name: SalesFormsPrefs.DefaultItem
                          Value: '1'
                        - Name: DTXCopyMemo
                          Value: 'false'
                        - Name: UncategorizedAssetAccountId
                          Value: '32'
                        - Name: UncategorizedIncomeAccountId
                          Value: '30'
                        - Name: UncategorizedExpenseAccountId
                          Value: '31'
                        - Name: MasAccountId
                          Value: '35'
                        - Name: SFCEnabled
                          Value: 'true'
                ProductAndServicesPrefs:
                  type: object
                  properties:
                    ForPurchase:
                      type: boolean
                      example: true
                    ForSales:
                      type: boolean
                      example: true
                    QuantityOnHand:
                      type: boolean
                      example: true
                    QuantityWithPriceAndRate:
                      type: boolean
                      example: true
                ReportPrefs:
                  type: object
                  properties:
                    CalcAgingReportFromTxnDate:
                      type: boolean
                      example: false
                    ReportBasis:
                      type: string
                      example: Accrual
                SalesFormsPrefs:
                  type: object
                  properties:
                    AllowDeposit:
                      type: boolean
                      example: true
                    AllowDiscount:
                      type: boolean
                      example: true
                    AllowEstimates:
                      type: boolean
                      example: true
                    AllowServiceDate:
                      type: boolean
                      example: false
                    AllowShipping:
                      type: boolean
                      example: false
                    CustomField:
                      type: array
                      items:
                        type: object
                        properties:
                          CustomField:
                            type: array
                            items:
                              type: object
                              properties:
                                BooleanValue:
                                  type: boolean
                                  example: false
                                Name:
                                  type: string
                                  example: SalesFormsPrefs.UseSalesCustom3
                                Type:
                                  type: string
                                  example: BooleanType
                            example:
                              - BooleanValue: false
                                Name: SalesFormsPrefs.UseSalesCustom3
                                Type: BooleanType
                              - BooleanValue: false
                                Name: SalesFormsPrefs.UseSalesCustom2
                                Type: BooleanType
                              - BooleanValue: true
                                Name: SalesFormsPrefs.UseSalesCustom1
                                Type: BooleanType
                      example:
                        - CustomField:
                            - BooleanValue: false
                              Name: SalesFormsPrefs.UseSalesCustom3
                              Type: BooleanType
                            - BooleanValue: false
                              Name: SalesFormsPrefs.UseSalesCustom2
                              Type: BooleanType
                            - BooleanValue: true
                              Name: SalesFormsPrefs.UseSalesCustom1
                              Type: BooleanType
                        - CustomField:
                            - Name: SalesFormsPrefs.SalesCustomName1
                              StringValue: 'Crew #'
                              Type: StringType
                    CustomTxnNumbers:
                      type: boolean
                      example: false
                    DefaultCustomerMessage:
                      type: string
                      example: Thank you for your business and have a great day!
                    DefaultDiscountAccount:
                      type: string
                      example: '86'
                    DefaultTerms:
                      type: object
                      properties:
                        value:
                          type: string
                          example: '3'
                    ETransactionAttachPDF:
                      type: boolean
                      example: false
                    ETransactionEnabledStatus:
                      type: string
                      example: NotApplicable
                    ETransactionPaymentEnabled:
                      type: boolean
                      example: false
                    IPNSupportEnabled:
                      type: boolean
                      example: false
                SyncToken:
                  type: string
                  example: '4'
                TaxPrefs:
                  type: object
                  properties:
                    TaxGroupCodeRef:
                      type: object
                      properties:
                        value:
                          type: string
                          example: '2'
                    UsingSalesTax:
                      type: boolean
                      example: true
                TimeTrackingPrefs:
                  type: object
                  properties:
                    BillCustomers:
                      type: boolean
                      example: true
                    MarkTimeEntriesBillable:
                      type: boolean
                      example: true
                    ShowBillRateToAll:
                      type: boolean
                      example: false
                    UseServices:
                      type: boolean
                      example: true
                    WorkWeekStartDate:
                      type: string
                      example: Monday
                VendorAndPurchasesPrefs:
                  type: object
                  properties:
                    BillableExpenseTracking:
                      type: boolean
                      example: true
                    POCustomField:
                      type: array
                      items:
                        type: object
                        properties:
                          CustomField:
                            type: array
                            items:
                              type: object
                              properties:
                                BooleanValue:
                                  type: boolean
                                  example: false
                                Name:
                                  type: string
                                  example: PurchasePrefs.UsePurchaseCustom3
                                Type:
                                  type: string
                                  example: BooleanType
                            example:
                              - BooleanValue: false
                                Name: PurchasePrefs.UsePurchaseCustom3
                                Type: BooleanType
                              - BooleanValue: true
                                Name: PurchasePrefs.UsePurchaseCustom2
                                Type: BooleanType
                              - BooleanValue: true
                                Name: PurchasePrefs.UsePurchaseCustom1
                                Type: BooleanType
                      example:
                        - CustomField:
                            - BooleanValue: false
                              Name: PurchasePrefs.UsePurchaseCustom3
                              Type: BooleanType
                            - BooleanValue: true
                              Name: PurchasePrefs.UsePurchaseCustom2
                              Type: BooleanType
                            - BooleanValue: true
                              Name: PurchasePrefs.UsePurchaseCustom1
                              Type: BooleanType
                        - CustomField:
                            - Name: PurchasePrefs.PurchaseCustomName2
                              StringValue: Sales Rep
                              Type: StringType
                            - Name: PurchasePrefs.PurchaseCustomName1
                              StringValue: 'Crew #'
                              Type: StringType
                    TrackingByCustomer:
                      type: boolean
                      example: true
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Preference-Update:
                value:
                  AccountingInfoPrefs:
                    ClassTrackingPerTxn: false
                    ClassTrackingPerTxnLine: true
                    CustomerTerminology: Customers
                    DepartmentTerminology: Location
                    TrackDepartments: true
                  CurrencyPrefs:
                    HomeCurrency:
                      value: USD
                    MultiCurrencyEnabled: true
                  EmailMessagesPrefs:
                    EstimateMessage:
                      Message: |-
                        Please review the estimate below.  Feel free to contact us if you have any questions.
                        We look forward to working with you.

                        Sincerely,
                        Craig's Design and Landscaping Services
                      Subject: Estimate from Craig's Design and Landscaping Services
                    InvoiceMessage:
                      Message: |-
                        Your invoice is attached.  Please remit payment at your earliest convenience.
                        Thank you for your business - we appreciate it very much.

                        Sincerely,
                        Craig's Design and Landscaping Services
                      Subject: Invoice from Craig's Design and Landscaping Services
                    SalesReceiptMessage:
                      Message: |-
                        Your sales receipt is attached.
                        Thank you for your business - we appreciate it very much.

                        Sincerely,
                        Craig's Design and Landscaping Services
                      Subject: Sales Receipt from Craig's Design and Landscaping Services
                    StatementMessage:
                      Message: |-
                        Your statement is attached.  Please remit payment at your earliest convenience.
                        Thank you for your business - we appreciate it very much.

                        Sincerely,
                        Craig's Design and Landscaping Services
                      Subject: Statement from Craig's Design and Landscaping Services
                  Id: '1'
                  MetaData:
                    CreateTime: '2016-01-13T01:07:08-08:00'
                    LastUpdatedTime: '2016-08-23T20:12:45-07:00'
                  OtherPrefs:
                    NameValue:
                      - Name: SalesFormsPrefs.DefaultCustomerMessage
                        Value: Thank you for your business and have a great day!
                      - Name: SalesFormsPrefs.DefaultItem
                        Value: '1'
                      - Name: DTXCopyMemo
                        Value: 'false'
                      - Name: UncategorizedAssetAccountId
                        Value: '32'
                      - Name: UncategorizedIncomeAccountId
                        Value: '30'
                      - Name: UncategorizedExpenseAccountId
                        Value: '31'
                      - Name: MasAccountId
                        Value: '35'
                      - Name: SFCEnabled
                        Value: 'true'
                  ProductAndServicesPrefs:
                    ForPurchase: true
                    ForSales: true
                    QuantityOnHand: true
                    QuantityWithPriceAndRate: true
                  ReportPrefs:
                    CalcAgingReportFromTxnDate: false
                    ReportBasis: Accrual
                  SalesFormsPrefs:
                    AllowDeposit: true
                    AllowDiscount: true
                    AllowEstimates: true
                    AllowServiceDate: false
                    AllowShipping: false
                    CustomField:
                      - CustomField:
                          - BooleanValue: false
                            Name: SalesFormsPrefs.UseSalesCustom3
                            Type: BooleanType
                          - BooleanValue: false
                            Name: SalesFormsPrefs.UseSalesCustom2
                            Type: BooleanType
                          - BooleanValue: true
                            Name: SalesFormsPrefs.UseSalesCustom1
                            Type: BooleanType
                      - CustomField:
                          - Name: SalesFormsPrefs.SalesCustomName1
                            StringValue: 'Crew #'
                            Type: StringType
                    CustomTxnNumbers: false
                    DefaultCustomerMessage: Thank you for your business and have a great day!
                    DefaultDiscountAccount: '86'
                    DefaultTerms:
                      value: '3'
                    ETransactionAttachPDF: false
                    ETransactionEnabledStatus: NotApplicable
                    ETransactionPaymentEnabled: false
                    IPNSupportEnabled: false
                  SyncToken: '4'
                  TaxPrefs:
                    TaxGroupCodeRef:
                      value: '2'
                    UsingSalesTax: true
                  TimeTrackingPrefs:
                    BillCustomers: true
                    MarkTimeEntriesBillable: true
                    ShowBillRateToAll: false
                    UseServices: true
                    WorkWeekStartDate: Monday
                  VendorAndPurchasesPrefs:
                    BillableExpenseTracking: true
                    POCustomField:
                      - CustomField:
                          - BooleanValue: false
                            Name: PurchasePrefs.UsePurchaseCustom3
                            Type: BooleanType
                          - BooleanValue: true
                            Name: PurchasePrefs.UsePurchaseCustom2
                            Type: BooleanType
                          - BooleanValue: true
                            Name: PurchasePrefs.UsePurchaseCustom1
                            Type: BooleanType
                      - CustomField:
                          - Name: PurchasePrefs.PurchaseCustomName2
                            StringValue: Sales Rep
                            Type: StringType
                          - Name: PurchasePrefs.PurchaseCustomName1
                            StringValue: 'Crew #'
                            Type: StringType
                    TrackingByCustomer: true
                  domain: QBO
                  sparse: false
      deprecated: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/purchase:
    post:
      tags:
        - Purchase
      summary: Purchase-Create
      description: |
        Create a puchase object
        Method : POST
      operationId: purchaseCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '175'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Purchase-Create:
                value:
                  AccountRef:
                    name: Visa
                    value: '42'
                  Line:
                    - AccountBasedExpenseLineDetail:
                        AccountRef:
                          name: Meals and Entertainment
                          value: '13'
                      Amount: 10
                      DetailType: AccountBasedExpenseLineDetail
                  PaymentType: CreditCard
              Purchase-Delete:
                value:
                  Id: '175'
                  SyncToken: '1'
              Purchase-Update:
                value:
                  AccountRef:
                    name: Visa
                    value: '42'
                  Credit: false
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomField: [ ]
                  ExchangeRate: 1
                  Id: '175'
                  Line:
                    - AccountBasedExpenseLineDetail:
                        AccountRef:
                          name: Meals and Entertainment
                          value: '13'
                        BillableStatus: NotBillable
                        TaxCodeRef:
                          value: NON
                      Amount: 100
                      DetailType: AccountBasedExpenseLineDetail
                      Id: '1'
                  MetaData:
                    CreateTime: '2016-08-23T22:52:14-07:00'
                    LastUpdatedTime: '2016-08-23T22:52:14-07:00'
                  PaymentType: CreditCard
                  PurchaseEx:
                    any:
                      - declaredType: com.intuit.schema.finance.v3.NameValue
                        globalScope: true
                        name: '{http://schema.intuit.com/finance/v3}NameValue'
                        nil: false
                        scope: javax.xml.bind.JAXBElement$GlobalScope
                        typeSubstituted: false
                        value:
                          Name: TxnType
                          Value: '54'
                  SyncToken: '0'
                  TotalAmt: 100
                  TxnDate: '2016-08-23'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/purchase/{id}:
    get:
      tags:
        - Purchase
      summary: Purchase-ReadById
      description: |
        Read a puchase object by Id
        Method : POST
      operationId: purchaseReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/purchaseorder:
    post:
      tags:
        - PurchaseOrder
      summary: PurchaseOrder-Create
      description: |
        Create a puchase-order object
        Method : POST
      operationId: purchaseorderCreate
      parameters:
        - name: operation
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '179'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              PurchaseOrder-Create:
                value:
                  APAccountRef:
                    name: Accounts Payable (A/P)
                    value: '33'
                  Line:
                    - Amount: 25
                      DetailType: ItemBasedExpenseLineDetail
                      ItemBasedExpenseLineDetail:
                        BillableStatus: NotBillable
                        CustomerRef:
                          name: Cool Cars
                          value: '3'
                        ItemRef:
                          name: Pump
                          value: '11'
                        Qty: 1
                        TaxCodeRef:
                          value: NON
                        UnitPrice: 25
                  TotalAmt: 25
                  VendorRef:
                    name: Hicks Hardware
                    value: '41'
              PurchaseOrder-Delete:
                value:
                  Id: '179'
                  SyncToken: '1'
              PurchaseOrder-Update:
                value:
                  APAccountRef:
                    name: Accounts Payable (A/P)
                    value: '33'
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomField:
                    - DefinitionId: '1'
                      Name: 'Crew #'
                      Type: StringType
                    - DefinitionId: '2'
                      Name: Sales Rep
                      Type: StringType
                  DocNumber: 1006-Updated
                  ExchangeRate: 1
                  Id: '179'
                  Line:
                    - Amount: 25
                      DetailType: ItemBasedExpenseLineDetail
                      Id: '1'
                      ItemBasedExpenseLineDetail:
                        BillableStatus: NotBillable
                        CustomerRef:
                          name: Cool Cars
                          value: '3'
                        ItemRef:
                          name: Pump
                          value: '11'
                        Qty: 1
                        TaxCodeRef:
                          value: NON
                        UnitPrice: 25
                  MetaData:
                    CreateTime: '2016-08-23T23:18:26-07:00'
                    LastUpdatedTime: '2016-08-23T23:18:26-07:00'
                  SyncToken: '0'
                  TotalAmt: 25
                  TxnDate: '2016-08-23'
                  VendorRef:
                    name: Hicks Hardware
                    value: '41'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/purchaseorder/{purchaseOrderId}:
    get:
      tags:
        - PurchaseOrder
      summary: PurchaseOrder-ReadById
      description: |
        Read a puchase-order object
        Method : POST
      operationId: purchaseorderReadbyid
      parameters:
        - name: purchaseOrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyId}/query:
    get:
      tags:
        - Query
      summary: Query-Read
      description: |
        Read the query object
        Method : GET
      operationId: queryRead
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
            example: '{{query}}'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  QueryResponse:
                    $ref: '#/components/schemas/QueryResponse'
  /v3/company/{companyid}/refundreceipt:
    post:
      tags:
        - RefundReceipt
      summary: RefundReceipt-Create
      description: |
        Create a refund-receipt object
        Method : POST
      operationId: refundreceiptCreate
      parameters:
        - name: operation
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '180'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              RefundReceipt-Create:
                value:
                  DepositToAccountRef:
                    name: Checking
                    value: '35'
                  Line:
                    - Amount: 420
                      DetailType: SalesItemLineDetail
                      SalesItemLineDetail:
                        ItemRef:
                          value: '2'
              RefundReceipt-Delete:
                value:
                  Id: '180'
                  SyncToken: '1'
              RefundReceipt-Update:
                value:
                  ApplyTaxAfterDiscount: false
                  Balance: 0
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  CustomField:
                    - DefinitionId: '1'
                      Name: 'Crew #'
                      Type: StringType
                  DepositToAccountRef:
                    name: Checking
                    value: '35'
                  DocNumber: 1044-Updated
                  ExchangeRate: 1
                  HomeTotalAmt: 420
                  Id: '180'
                  Line:
                    - Amount: 420
                      DetailType: SalesItemLineDetail
                      Id: '1'
                      LineNum: 1
                      SalesItemLineDetail:
                        ItemRef:
                          name: Hours
                          value: '2'
                        TaxCodeRef:
                          value: NON
                    - Amount: 420
                      DetailType: SubTotalLineDetail
                      SubTotalLineDetail: { }
                  MetaData:
                    CreateTime: '2016-08-23T23:38:22-07:00'
                    LastUpdatedTime: '2016-08-23T23:38:22-07:00'
                  PaymentRefNum: To Print
                  PrintStatus: NeedToPrint
                  SyncToken: '0'
                  TotalAmt: 420
                  TxnDate: '2016-08-23'
                  TxnTaxDetail:
                    TotalTax: 0
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/refundreceipt/{id}:
    get:
      tags:
        - RefundReceipt
      summary: RefundReceipt-ReadById
      description: |
        Read a refund-receipt object
        Method : GET
      operationId: refundreceiptReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/AccountList:
    get:
      tags:
        - Reports
      summary: Report-AccountList
      description: |+
        Report - Account list detail
        Method : GET

        The information below provides a reference on how to access the account list detail report from the QuickBooks Online Report Service.
      parameters:
        - name: start_date
          required: false
          in: query
          schema:
            type: string
        - name: end_date
          required: false
          in: query
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      operationId: reportAccountlist
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/AgedPayableDetail:
    get:
      tags:
        - Reports
      summary: Report-AgedPayableDetail
      description: |+
        Report - AgedPayable aging detail
        Method : GET

        The information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      operationId: reportAgedpayabledetail
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/AgedPayables:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-AgedPayables
      description: |+
        Report - AgedPayable aging summary
        Method : GET
        The information below provides a reference on how to access the AP Aging summary report from the QuickBooks Online Report Service.
      operationId: reportAgedpayables
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/AgedReceivableDetail:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-AgedReceivableDetail
      description: |+
        Report - AgedReceivableDetail aging detail
        Method : GET

        The information below provides a reference on how to access the AR Aging Detail report from the QuickBooks Online Report Service.
      operationId: reportAgedreceivabledetail
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/AgedReceivables:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-AgedReceivables
      description: |+
        Report - AgedReceivable aging summary
        Method : GET

        The information below provides a reference on how to access the AR Aging Summary report from the QuickBooks Online Report Service.

      operationId: reportAgedreceivables
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/BalanceSheet:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-BalanceSheet
      description: |+
        Report - BalanceSheet
        Method : GET

        The information below provides a reference on how to query the Balance Sheet report from the QuickBooks Online Report Service.
      operationId: reportBalancesheet
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/CashFlow:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-CashFlow
      description: |+
        Report - CashFlow
        Method : GET

        The information below provides a reference on how to access the cash flow report from the QuickBooks Online Report Service.

      operationId: reportCashflow

      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/ClassSales:
    get:
      tags:
        - Reports
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      summary: Report-CashSales
      description: |+
        Report - CashSales
        Method : GET
      operationId: reportCashsales
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/CustomerBalance:
    get:
      tags:
        - Reports
      summary: Report-CustomerBalance
      description: |+
        Report - CustomerBalance
        Method : GET
      operationId: reportCustomerbalance
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/CustomerBalanceDetail:
    get:
      tags:
        - Reports
      summary: Report-CustomerBalanceDetail
      description: |+
        Report - CustomerBalance Detail
        Method : GET

        The information below provides a reference on how to access the Customer Balance Detail report from the QuickBooks Online Report Service.
      operationId: reportCustomerbalancedetail
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/CustomerIncome:
    get:
      tags:
        - Reports
      summary: Report-CustomerIncome
      description: |+
        Report - Customer Income
        Method : GET
      operationId: reportCustomerincome
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/CustomerSales:
    get:
      tags:
        - Reports
      summary: Report-CustomerSales
      description: |+
        Report - Customer Sales
        Method : GET
      operationId: reportCustomersales
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/DepartmentSales:
    get:
      tags:
        - Reports
      summary: Report-DepartmentSales
      description: |+
        Report - Department Sales
        Method : GET
      operationId: reportDepartmentsales
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/GeneralLedger:
    get:
      tags:
        - Reports
      summary: Report-GeneralLedger
      description: |+
        Report - General Ledger
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/general%20ledger
      operationId: reportGeneralledger
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/InventoryValuationSummary:
    get:
      tags:
        - Reports
      summary: Report-InventoryValuationSummary
      description: |+
        Report - Inventory Valuation Summary
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/inventory%20valuation
      operationId: reportInventoryvaluationsummary
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/ItemSales:
    get:
      tags:
        - Reports
      summary: Report-ItemSales
      description: |+
        Report - Item Sales
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/sales%20by%20product
      operationId: reportItemsales
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/ProfitAndLoss:
    get:
      tags:
        - Reports
      summary: Report-ProfitAndLoss
      description: |+
        Report - Profit and Loss
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss
      operationId: reportProfitandloss
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'

    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/ProfitAndLossDetail:
    get:
      tags:
        - Reports
      summary: Report-ProfitAndLossDetail
      description: |+
        Report - Profit and Loss Detail
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/profit%20and%20loss%20detail
      operationId: reportProfitandlossdetail
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/TrialBalance:
    get:
      tags:
        - Reports
      summary: Report-TrialBalance
      description: |+
        Report - Trial Balance 
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/trial%20balance
      operationId: reportTrialbalance
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/TransactionList:
    get:
      tags:
        - Reports
      summary: Report-TransactionList
      description: |+
        Report - Trial List 
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/transaction%20list
      operationId: reportTransactionlist
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/VendorBalance:
    get:
      tags:
        - Reports
      summary: Report-VendorBalance
      description: |+
        Report - Vendor Balance 
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/vendor%20balance
      operationId: reportVendorbalance
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/VendorBalanceDetail:
    get:
      tags:
        - Reports
      summary: Report-VendorBalanceDetail
      description: |+
        Report - Vendor Balance Detail
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/vendor%20balance%20detail
      operationId: reportVendorbalancedetail
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/reports/VendorExpenses:
    get:
      tags:
        - Reports
      summary: Report-VendorExpense
      description: |+
        Report - Vendor Expense
        Method : GET

        Docs - https://developer.intuit.com/docs/api/accounting/expenses%20by%20vendor
      operationId: reportVendorexpense
      parameters:
        - name: start_date
          in: query
          required: false
          schema:
            type: string
        - name: end_date
          in: query
          required: false
          schema:
            type: string
        - name: columns
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/salesreceipt:
    post:
      tags:
        - SalesReceipt
      summary: SalesReceipt-Create
      description: |
        Create an salesreceipt object
        Method : POST
      operationId: salesreceiptCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
        - name: include
          in: query
          schema:
            type: string
            example: void
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/salesreceipt/{id}:
    get:
      tags:
        - SalesReceipt
      summary: SalesReceipt-ReadByID
      description: |
        Create an salesreceipt object
        Method : POST
      operationId: salesreceiptReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/taxagency:
    post:
      tags:
        - TaxAgency
      summary: TaxAgency-Create
      description: |-
        Create a tax-agency object
        Method : POST

        Sample response payload

        {
          "SalesReceipt": {
            "domain": "QBO",
            "status": "Deleted",
            "Id": "181"
          },
          "time": "2016-09-02T02:17:24.353-07:00"
        }
      operationId: taxagencyCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                DisplayName:
                  type: string
                  example: CityTaxAgency
            examples:
              TaxAgency-Create:
                value:
                  DisplayName: CityTaxAgency
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/taxagency/{id}:
    get:
      tags:
        - TaxAgency
      summary: TaxAgency-ReadByID
      description: |
        Get a tax-agency object by ID
        Method : GET
      operationId: taxagencyReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/taxcode/{id}:
    get:
      tags:
        - TaxCode
      summary: TaxCode-ReadById
      description: |
        Read a taxcode by Id
        Method : POST
      operationId: taxcodeReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/taxrate/{id}:
    get:
      tags:
        - TaxRate
      summary: TaxRate-ReadById
      description: |
        Read a taxRate by Id
        Method : POST
      operationId: taxrateReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/taxservice/taxcode:
    post:
      tags:
        - TaxService
      summary: TaxService-Create
      description: |
        Use TaxService to create taxcode and corresponding taxrates
        Method : POST
      operationId: taxserviceCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TaxCode:
                  type: string
                  example: MyTaxCodeName
                TaxRateDetails:
                  type: array
                  items:
                    type: object
                    properties:
                      RateValue:
                        type: string
                        example: '8'
                      TaxAgencyId:
                        type: string
                        example: '1'
                      TaxApplicableOn:
                        type: string
                        example: Sales
                      TaxRateName:
                        type: string
                        example: myNewTaxRateName
                  example:
                    - RateValue: '8'
                      TaxAgencyId: '1'
                      TaxApplicableOn: Sales
                      TaxRateName: myNewTaxRateName
            examples:
              TaxService-Create:
                value:
                  TaxCode: MyTaxCodeName
                  TaxRateDetails:
                    - RateValue: '8'
                      TaxAgencyId: '1'
                      TaxApplicableOn: Sales
                      TaxRateName: myNewTaxRateName
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/term:
    post:
      tags:
        - Term
      summary: Term-Create
      description: |
        Create a term object
        Method : POST
      operationId: termCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Active:
                  type: boolean
                  example: false
                DiscountPercent:
                  type: number
                  example: 0
                DueDays:
                  type: number
                  example: 120
                Id:
                  type: string
                  example: '8'
                Name:
                  type: string
                  example: Term1120-Updated
                SyncToken:
                  type: string
                  example: '1'
                Type:
                  type: string
                  example: STANDARD
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Term-Create:
                value:
                  DueDays: '120'
                  Name: Term120
              Term-Delete:
                value:
                  Active: false
                  DiscountPercent: 0
                  DueDays: 120
                  Id: '8'
                  Name: Term1120-Updated
                  SyncToken: '1'
                  Type: STANDARD
                  domain: QBO
                  sparse: false
              Term-Update:
                value:
                  Active: true
                  DiscountPercent: 0
                  DueDays: 120
                  Id: '8'
                  Name: Term1120-Updated
                  SyncToken: '0'
                  Type: STANDARD
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/term/{id}:
    get:
      tags:
        - Term
      summary: Term-ReadById
      description: |+
        Read a term object by Id
        Method : Get

      operationId: termReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/timeactivity:
    post:
      tags:
        - TimeActivity
      summary: TimeActivity-Create
      description: |+
        Create a term object
        Method : POST
      operationId: timeactivityCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '6'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              TimeActivity-Create:
                value:
                  EmployeeRef:
                    name: Emily Platt
                    value: '55'
                  EndTime: '2013-07-05T17:00:00-08:00'
                  NameOf: Employee
                  StartTime: '2015-07-05T08:00:00-08:00'
              TimeActivity-Delete:
                value:
                  Id: '6'
                  SyncToken: '1'
              TimeActivity-ReadById:
                value:
                  BillableStatus: NotBillable
                  EmployeeRef:
                    name: Emily Platt
                    value: '55'
                  EndTime: '2016-09-02T18:00:00-07:00'
                  HourlyRate: 0
                  Id: '6'
                  ItemRef:
                    name: Hours
                    value: '2'
                  NameOf: Employee
                  StartTime: '2016-09-02T09:00:00-07:00'
                  SyncToken: '0'
                  Taxable: false
                  TxnDate: '2016-09-03'
                  domain: QBO
                  sparse: false
              TimeActivity-Update:
                value:
                  BillableStatus: NotBillable
                  EmployeeRef:
                    name: Emily Platt
                    value: '55'
                  EndTime: '2016-09-02T18:00:00-07:00'
                  HourlyRate: 0
                  Id: '6'
                  ItemRef:
                    name: Hours
                    value: '2'
                  NameOf: Employee
                  StartTime: '2016-09-02T09:00:00-07:00'
                  SyncToken: '0'
                  Taxable: false
                  TxnDate: '2016-09-03'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/transfer:
    post:
      tags:
        - Transfer
      summary: Transfer-Create
      description: |+
        Create a transfer object
        Method : POST

      operationId: transferCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '183'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              Transfer-Create:
                value:
                  Amount: '120.00'
                  FromAccountRef:
                    name: Checking
                    value: '35'
                  ToAccountRef:
                    name: Savings
                    value: '36'
              Transfer-Delete:
                value:
                  Id: '183'
                  SyncToken: '1'
              Transfer-Update:
                value:
                  Amount: 120
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  ExchangeRate: 1
                  FromAccountRef:
                    name: Checking
                    value: '35'
                  Id: '183'
                  SyncToken: '0'
                  ToAccountRef:
                    name: Savings
                    value: '36'
                  TxnDate: '2016-09-03'
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/transfer/{id}:
    get:
      tags:
        - Transfer
      summary: Transfer-ReadById
      description: |+
        Read a transfer object by Id
        Method : GET

      operationId: transferReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/vendor:
    post:
      tags:
        - Vendor
      summary: Vendor-Create
      description: |+
        Create a vendor object
        Method : POST

      operationId: vendorCreate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AcctNum:
                  type: string
                  example: '35372649'
                Active:
                  type: boolean
                  example: false
                Balance:
                  type: number
                  example: 0
                BillAddr:
                  type: object
                  properties:
                    City:
                      type: string
                      example: Millbrae
                    Country:
                      type: string
                      example: U.S.A
                    CountrySubDivisionCode:
                      type: string
                      example: CA
                    Id:
                      type: string
                      example: '111'
                    Line1:
                      type: string
                      example: Dianne's Auto Shop
                    Line2:
                      type: string
                      example: Dianne Bradley
                    Line3:
                      type: string
                      example: 29834 Mustang Ave.
                    PostalCode:
                      type: string
                      example: '94030'
                CompanyName:
                  type: string
                  example: Dianne's Auto Shop
                CurrencyRef:
                  type: object
                  properties:
                    name:
                      type: string
                      example: United States Dollar
                    value:
                      type: string
                      example: USD
                DisplayName:
                  type: string
                  example: Dianne's Auto Shop-Updated
                FamilyName:
                  type: string
                  example: Bradley
                GivenName:
                  type: string
                  example: Dianne
                Id:
                  type: string
                  example: '70'
                Mobile:
                  type: object
                  properties:
                    FreeFormNumber:
                      type: string
                      example: (650) 555-2000
                PrimaryEmailAddr:
                  type: object
                  properties:
                    Address:
                      type: string
                      example: dbradley@myemail.com
                PrimaryPhone:
                  type: object
                  properties:
                    FreeFormNumber:
                      type: string
                      example: (650) 555-2342
                PrintOnCheckName:
                  type: string
                  example: Dianne's Auto Shop
                Suffix:
                  type: string
                  example: Sr.
                SyncToken:
                  type: string
                  example: '0'
                TaxIdentifier:
                  type: string
                  example: XXXXXX8293
                Title:
                  type: string
                  example: Ms.
                Vendor1099:
                  type: boolean
                  example: false
                WebAddr:
                  type: object
                  properties:
                    URI:
                      type: string
                      example: http://DiannesAutoShop.com
                domain:
                  type: string
                  example: QBO
                sparse:
                  type: boolean
                  example: false
            examples:
              Vendor-Create:
                value:
                  AcctNum: '35372649'
                  BillAddr:
                    City: Millbrae
                    Country: U.S.A
                    CountrySubDivisionCode: CA
                    Line1: Dianne's Auto Shop
                    Line2: Dianne Bradley
                    Line3: 29834 Mustang Ave.
                    PostalCode: '94030'
                  CompanyName: Dianne's Auto Shop
                  DisplayName: Dianne's Auto Shop
                  FamilyName: Bradley
                  GivenName: Dianne
                  Mobile:
                    FreeFormNumber: (650) 555-2000
                  PrimaryEmailAddr:
                    Address: dbradley@myemail.com
                  PrimaryPhone:
                    FreeFormNumber: (650) 555-2342
                  PrintOnCheckName: Dianne's Auto Shop
                  Suffix: Sr.
                  TaxIdentifier: 99-5688293
                  Title: Ms.
                  WebAddr:
                    URI: http://DiannesAutoShop.com
              Vendor-Delete:
                value:
                  AcctNum: '35372649'
                  Active: false
                  Balance: 0
                  BillAddr:
                    City: Millbrae
                    Country: U.S.A
                    CountrySubDivisionCode: CA
                    Id: '111'
                    Line1: Dianne's Auto Shop
                    Line2: Dianne Bradley
                    Line3: 29834 Mustang Ave.
                    PostalCode: '94030'
                  CompanyName: Dianne's Auto Shop
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  DisplayName: Dianne's Auto Shop-Updated
                  FamilyName: Bradley
                  GivenName: Dianne
                  Id: '70'
                  Mobile:
                    FreeFormNumber: (650) 555-2000
                  PrimaryEmailAddr:
                    Address: dbradley@myemail.com
                  PrimaryPhone:
                    FreeFormNumber: (650) 555-2342
                  PrintOnCheckName: Dianne's Auto Shop
                  Suffix: Sr.
                  SyncToken: '0'
                  TaxIdentifier: XXXXXX8293
                  Title: Ms.
                  Vendor1099: false
                  WebAddr:
                    URI: http://DiannesAutoShop.com
                  domain: QBO
                  sparse: false
              Vendor-Update:
                value:
                  AcctNum: '35372649'
                  Active: true
                  Balance: 0
                  BillAddr:
                    City: Millbrae
                    Country: U.S.A
                    CountrySubDivisionCode: CA
                    Id: '111'
                    Line1: Dianne's Auto Shop
                    Line2: Dianne Bradley
                    Line3: 29834 Mustang Ave.
                    PostalCode: '94030'
                  CompanyName: Dianne's Auto Shop
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  DisplayName: Dianne's Auto Shop-Updated
                  FamilyName: Bradley
                  GivenName: Dianne
                  Id: '70'
                  Mobile:
                    FreeFormNumber: (650) 555-2000
                  PrimaryEmailAddr:
                    Address: dbradley@myemail.com
                  PrimaryPhone:
                    FreeFormNumber: (650) 555-2342
                  PrintOnCheckName: Dianne's Auto Shop
                  Suffix: Sr.
                  SyncToken: '0'
                  TaxIdentifier: XXXXXX8293
                  Title: Ms.
                  Vendor1099: false
                  WebAddr:
                    URI: http://DiannesAutoShop.com
                  domain: QBO
                  sparse: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/vendor/{id}:
    get:
      tags:
        - Vendor
      summary: Vendor-ReadById
      description: |+
        Read a vendor object by Id
        Method : GET
      operationId: vendorReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/vendorcredit:
    post:
      tags:
        - VendorCredit
      summary: VendorCredit-Create
      description: |
        Create a vendorcredit object
        Method : POST
      operationId: vendorcreditCreate
      parameters:
        - name: operation
          required: false
          in: query
          schema:
            type: string
            example: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  type: string
                  example: '185'
                SyncToken:
                  type: string
                  example: '1'
            examples:
              VendorCredit-Delete:
                value:
                  Id: '185'
                  SyncToken: '1'
              VendorCredit-Update:
                value:
                  APAccountRef:
                    name: Accounts Payable (A/P)
                    value: '33'
                  CurrencyRef:
                    name: United States Dollar
                    value: USD
                  ExchangeRate: 1
                  Id: '185'
                  Line:
                    - AccountBasedExpenseLineDetail:
                        AccountRef:
                          name: Bank Charges
                          value: '8'
                        BillableStatus: Billable
                        CustomerRef:
                          name: Amy's Bird Sanctuary
                          value: '1'
                        TaxCodeRef:
                          value: TAX
                      Amount: 90
                      DetailType: AccountBasedExpenseLineDetail
                      Id: '1'
                  MetaData:
                    CreateTime: '2016-09-02T03:09:34-07:00'
                    LastUpdatedTime: '2016-09-02T03:09:34-07:00'
                  SyncToken: '0'
                  TotalAmt: 90
                  TxnDate: '2014-04-23'
                  VendorRef:
                    name: Books by Bessie
                    value: '30'
                  domain: QBO
                  sparse: false
          text/plain:
            examples:
              VendorCredit-Create:
                value: |-
                  {
                          "TxnDate":"2014-12-23",
                          "Line":[
                          {
                              "Id":"1",
                              "Amount":90.00,
                              "DetailType":"AccountBasedExpenseLineDetail",
                              "AccountBasedExpenseLineDetail":
                              {
                                  "CustomerRef":
                                  {
                                      "value":"1",
                                      "name":"Amy's Bird Sanctuary"
                                  },
                                  "AccountRef":
                                  {
                                      "value":"8",
                                      "name":"Bank Charges"
                                  },
                                  "BillableStatus":"Billable",
                                  "TaxCodeRef":
                                  {
                                      "value":"TAX"
                                  }
                              }
                          }
                          ],
                          "VendorRef":
                          {
                              "value":"30",
                              "name":"Books by Bessie"
                          },
                          "APAccountRef":
                          {
                              "value":"33",
                              "name":"Accounts Payable (A/P)"
                          },
                          "TotalAmt":90.00
                      }
                      ]
                  }
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
  /v3/company/{companyid}/vendorcredit/{id}:
    get:
      tags:
        - VendorCredit
      summary: VendorCredit-ReadById
      description: |-
        Read a vendorcredit object by Id
        Method : GET
        Please change the VendorCredit it from 165 to a valid VendorCredit objectId which exists in your QBO account
      operationId: vendorcreditReadbyid
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
    parameters:
      - name: companyid
        in: path
        required: true
        schema:
          type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    BalanceSheetItemAccount:
      type: object
      properties:
        name:
          type: string
          description: Name of the account.
        total:
          type: number
          description: Balance of the account.
    BalanceSheetItem:
      type: object
      properties:
        total:
          type: number
          description: Total amount of the balance sheet item.
        accounts:
          type: array
          description: List of accounts in the balance sheet item.
          items:
            $ref: '#/components/schemas/BalanceSheetItemAccount'
    BalanceSheet:
      type: object
      properties:
        startDate:
          type: string
          description: Start date of the balance sheet.
        endDate:
          type: string
          description: End date of the balance sheet.
        createDate:
          type: string
          description: Date and time when the balance sheet was created.
        currentAssets:
          $ref: '#/components/schemas/BalanceSheetItem'
        fixedAssets:
          $ref: '#/components/schemas/BalanceSheetItem'
        liabilities:
          $ref: '#/components/schemas/BalanceSheetItem'
        equity:
          $ref: '#/components/schemas/BalanceSheetItem'
    Class:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Name:
          type: string
          description: Name of the class.
        SubClass:
          type: string
          description: Subclass of the class.
        FullyQualifiedName:
          type: string
          description: Fully qualified name of the class.
        Active:
          type: boolean
          description: Whether the class is active.
        domain:
          type: string
          description: Domain of the class.
    ItemResponse:
      type: object
      properties:
        Item:
          $ref: '#/components/schemas/Item'
    Item:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        QtyOnHand:
          type: number
          description: Quantity on hand of the item.
        InvStartDate:
          type: string
          description: Start date of the inventory.
        IncomeAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        Type:
          type: string
          description: Type of the item.
        AssetAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        ExpenseAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock the object for use by one app at a time.
        Sku:
          type: string
          description: SKU of the item.
        FullyQualifiedName:
          type: string
          description: Fully qualified name of the item.
        Name:
          type: string
          description: Name of the item.
        Description:
          type: string
          description: Description of the item.
        Active:
          type: boolean
          description: Whether the item is active.
        domain:
          type: string
          description: Domain of the item.
        TrackQtyOnHand:
          type: boolean
          description: Whether to track quantity on hand.
        UnitPrice:
          type: number
          description: Unit price of the item.
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          properties:
            CreateTime:
              type: string
              description: Date and time when the item was created.
            LastUpdatedTime:
              type: string
              description: Date and time when the item was last updated.
    ReferenceType:
      type: object
      description: Reference type
      properties:
        value:
          type: string
          description: The ID for the referenced object as found in the Id field of the object payload.
            The context is set by the type of reference and is specific to the QuickBooks company file.
        name:
          type: string
          description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object.
            This varies by context and specific type of object referenced.
            For example, references to a Customer object use Customer.DisplayName to populate this field.
            Optionally returned in responses, implementation dependent.
    JournalEntryLineItemDetail:
      type: object
      properties:
        PostingType:
          type: string
          description: Posting type
        AccountRef:
          $ref: '#/components/schemas/ReferenceType'
    JournalEntryLineItem:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Description:
          type: string
          description: Description of the line item.
        Amount:
          type: number
          description: Total amount of the line item.
        DetailType:
          type: string
          description: Detail type of the line item.
        JournalEntryLineDetail:
          $ref: '#/components/schemas/JournalEntryLineItemDetail'
    JournalEntry:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        createDate:
          type: string
          description: Date and time when the journal entry was created.
        Line:
          type: array
          description: List of line items in the journal entry.
          items:
            $ref: '#/components/schemas/JournalEntryLineItem'
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          properties:
            CreateTime:
              type: string
              description: Date and time when the journal entry was created.
            LastUpdatedTime:
              type: string
              description: Date and time when the journal entry was last updated.
    Preferences:
      type: object
      properties:
        ReportPrefs:
          properties:
            ReportBasis:
              type: string
              description: The report basis.
            CalcAgingReportFromTxnDate:
              type: boolean
              description: Whether to calculate aging report from transaction date.

        AccountingInfoPrefs:
          type: object
          properties:
            FirstMonthOfFiscalYear:
              type: string
              description: The first month of the fiscal year.
            UseAccountNumbers:
              type: boolean
              description: Whether to use account numbers.
            TaxYearMonth:
              type: string
              description: The start month of the tax year.
            ClassTrackingPerTxn:
              type: boolean
              description: Whether to track classes per transaction.
            TrackDepartments:
              type: boolean
              description: Whether to track departments.
            CustomerTerminology:
              type: string
              description: The customer terminology.
            BookCloseDate:
              type: string
              description: The book close date.
            DepartmentTerminology:
              type: string
              description: The department terminology.
            ClassTrackingPerTxnLine:
              type: boolean
              description: Whether to track classes per transaction line.
            TaxForm:
              type: string
              description: The tax form.
        ProductAndServicesPrefs:
          type: object
          properties:
            QuantityWithPrice:
              type: boolean
              description: Whether to show quantity with price.
            QuantityOnHand:
              type: boolean
              description: Whether to show quantity on hand.
            ForSales:
              type: boolean
              description: Whether the product and services are for sales.
            ForPurchase:
              type: boolean
              description: Whether the product and services are for purchase.
        SalesFormsPrefs:
          properties:
            ETransactionPaymentEnabled:
              type: boolean
              description: Whether e-transaction payment is enabled.
            CustomTxnNumbers:
              type: boolean
              description: Whether custom transaction numbers are enabled.
            AllowShipping:
              type: boolean
              description: Whether shipping is allowed.
            AllowServiceDate:
              type: boolean
              description: Whether service date is allowed.
            ETransactionEnabledStatus:
              type: string
              description: The e-transaction enabled status.
            DefaultCustomerMessage:
              type: string
              description: The default customer message.
            EmailCopyToCompany:
              type: boolean
              description: Whether to email a copy to the company.
            AllowDeposit:
              type: boolean
              description: Whether deposit is allowed.
            AllowDiscount:
              type: boolean
              description: Whether discount is allowed.
            DefaultDiscountAccount:
              type: string
              description: The default discount account.
            AutoApplyCredit:
              type: boolean
              description: Whether to auto apply credit.
            AutoApplyPayments:
              type: boolean
              description: Whether to auto apply payments.
            AllowEstimates:
              type: boolean
              description: Whether estimates are allowed.
            IPNSupportEnabled:
              type: boolean
              description: Whether IPN support is enabled.
            DefaultTerms:
              type: object
              description: The default terms.
              properties:
                value:
                  type: string
                  description: The value of the default terms.
    ProfitAndLossItemAccount:
      type: object
      properties:
        name:
          type: string
          description: Name of the item.
        balance:
          type: number
          description: Total balance of the item.
    ProfitAndLossItem:
      type: object
      properties:
        total:
          type: number
          description: Total amount of the profit and loss item.
        accounts:
          type: array
          description: List of accounts in the profit and loss item.
          items:
            $ref: '#/components/schemas/ProfitAndLossItemAccount'
    QueryResponse:
      type: object
      properties:
        startPosition:
          type: number
          description: The start position of the query response.
        totalCount:
          type: number
          description: The total count of the query response.
        Class:
          type: array
          description: List of classes in the query response.
          items:
            $ref: '#/components/schemas/Class'
        Item:
          type: array
          description: List of items in the query response.
          items:
            $ref: '#/components/schemas/Item'
        Account:
          type: array
          description: List of accounts in the query response.
          items:
            $ref: '#/components/schemas/Account'
        Vendor:
          type: array
          description: List of vendors in the query response.
          items:
            $ref: '#/components/schemas/Vendor'
        Customer:
          type: array
          description: List of customers in the query response.
          items:
            $ref: '#/components/schemas/Customer'
        Bill:
          type: array
          description: List of bills in the query response.
          items:
            $ref: '#/components/schemas/Bill'
        Payment:
          type: array
          description: List of payments in the query response.
          items:
            $ref: '#/components/schemas/Payment'
        Invoice:
          type: array
          description: List of invoices in the query response.
          items:
            $ref: '#/components/schemas/Invoice'
        JournalEntry:
          type: array
          description: List of journal entries in the query response.
          items:
            $ref: '#/components/schemas/JournalEntry'
        Preferences:
          type: array
          description: List of preferences in the query response.
          items:
            $ref: '#/components/schemas/Preferences'
    ProfitAndLoss:
      type: object
      properties:
        startDate:
          type: string
          description: Start date of the profit and loss report.
        endDate:
          type: string
          description: End date of the profit and loss report.
        netIncome:
          type: number
          description: Net income of the profit and loss report.
        netOperatingIncome:
          type: number
          description: Net operating income of the profit and loss report.
        grossProfit:
          type: number
          description: Gross profit of the profit and loss report.
        expenses:
          $ref: '#/components/schemas/ProfitAndLossItem'
        income:
          $ref: '#/components/schemas/ProfitAndLossItem'
    Report:
      type: object
      properties:
        Header:
          type: object
          description: The header of the report.
          properties:
            ReportName:
              type: string
              description: The name of the report.
            DateMacro:
              type: string
              description: The date macro of the report.
            ReportBasis:
              type: string
              description: The report basis of the report.
            StartPeriod:
              type: string
              description: The start date of the report.
              format: date
            EndPeriod:
              type: string
              description: The end date of the report.
              format: date
            Time:
              type: string
              description: The time of the report.
              format: date-time
            SummarizeColumnsBy:
              type: string
              description: The column summarization of the report.
        Rows:
          type: object
          description: The rows of the report.
          properties:
            Row:
              type: array
              items:
                type: object
                properties:
                  Header:
                    type: object
                    description: The header of the row.
                    properties:
                      ColData:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                              description: The value of the column.
                            id:
                              type: string
                              description: The ID of the column.
                            type:
                              type: string
                              description: The type of the column.
                  Rows:
                    type: object
                    description: The rows of the row.
                    properties:
                      Row:
                        type: array
                        items:
                          type: object
                          properties:
                            Header:
                              type: object
                              description: The header of the row.
                              properties:
                                ColData:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      value:
                                        type: string
                                        description: The value of the column.
                                      id:
                                        type: string
                                        description: The ID of the column.
                                      type:
                                        type: string
                                        description: The type of the column.
        Columns:
          type: object
          description: The columns of the report.
          properties:
            Column:
              type: array
              items:
                type: object
                properties:
                  ColType:
                    type: string
                    description: The type of the column.
                  ColTitle:
                    type: string
                    description: The title of the column.
                  MetaData:
                    type: array
                    description: The metadata of the column.
                    items:
                      type: object
                      properties:
                        Name:
                          type: string
                          description: The name of the column.
                        Value:
                          type: string
                          description: The value of the column.
    VendorResponse:
      type: object
      properties:
        Vendor:
          $ref: '#/components/schemas/Vendor'
    VendorCreateObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        Title:
          type: string
          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes are required during create.
        GivenName:
          type: string
          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        MiddleName:
          type: string
          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        Suffix:
          type: string
          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        FamilyName:
          type: string
          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        PrimaryEmailAddr:
          description: Primary email address.
          $ref: '#/components/schemas/EmailAddress'
        DisplayName:
          type: string
          description: The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating vendor name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.
        OtherContactInfo:
          type: object
          description: List of ContactInfo entities of any contact info type.
          # $ref: '#/components/schemas/ContactInfo
        APAccountRef:
          type: object
          description: Identifies the accounts payable account to be used for this supplier. Each supplier must have his own AP account. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Query the Account name list resource to determine the appropriate Account object for this reference. Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TermRef:
          type: object
          description: Reference to a default Term associated with this Vendor object. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for TermRef.value and TermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        Source:
          type: string
          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include- QBCommerce
        GSTIN:
          type: string
          description: GSTIN is an identification number assigned to every GST registered business.
        T4AEligible:
          type: string
          description: True if vendor is T4A eligible. Valid for CA locale
        Fax:
          type: object
          description: Fax number
          $ref: '#/components/schemas/TelephoneNumber'
        BusinessNumber:
          type: string
          description: Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.
        HasTPAR:
          type: boolean
          description: Indicate if the vendor has TPAR enabled. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.
        TaxReportingBasis:
          type: string
          description: The method in which the supplier tracks their income. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Valid values include- Cash and Accrual.
        Mobile:
          type: object
          description: Mobile phone number
          $ref: '#/components/schemas/TelephoneNumber'
        PrimaryPhone:
          type: object
          description: Primary phone number
          $ref: '#/components/schemas/TelephoneNumber'
        Active:
          type: boolean
          description: If true, this object is currently enabled for use by QuickBooks.
        AlternatePhone:
          type: object
          description: Alternate phone number
          $ref: '#/components/schemas/TelephoneNumber'
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        Vendor1099:
          type: boolean
          description: This vendor is an independent contractor; someone who is given a 1099-MISC form at the end of the year. A 1099 vendor is paid with regular checks, and taxes are not withheld on their behalf.
        BillRate:
          type: number
          description: BillRate can be set to specify this vendor's hourly billing rate.
        WebAddr:
          type: object
          description: Website address.
          $ref: '#/components/schemas/WebSiteAddress'
        T5018Eligible:
          type: boolean
          description: True if vendor is T5018 eligible. Valid for CA locale
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        VendorPaymentBankDetail:
          type: object
          description: Vendor Payment Bank Detail.
          # $ref: '#/components/schemas/VendorPaymentBankDetail'
        TaxIdentifier:
          type: string
          description: The tax ID of the Person or Organization. The value is masked in responses, exposing only last four characters. For example, the ID of 123-45-6789 is returned as XXXXXXX6789.
        AcctNum:
          type: string
          description: Name or number of the account associated with this vendor.
        GSTRegistrationType:
          type: string
          description: For the filing of GSTR, transactions need to be classified depending on the type of vendor from whom the purchase is made. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-
            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).
            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.
            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.
            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.
            OVERSEAS Overseas. Customer who has a business which is located out of India.
            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.
            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.
        PrintOnCheckName:
          type: string
          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Cannot be removed with sparse update.
        BillAddr:
          type: object
          description: Default billing address
          $ref: '#/components/schemas/PhysicalAddress'
    Vendor:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        Title:
          type: string
          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes are required during create.
        GivenName:
          type: string
          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        MiddleName:
          type: string
          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        Suffix:
          type: string
          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        FamilyName:
          type: string
          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required for object create.
        PrimaryEmailAddr:
          description: Primary email address.
          $ref: '#/components/schemas/EmailAddress'
        DisplayName:
          type: string
          description: The name of the vendor as displayed. Must be unique across all Vendor, Customer, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating vendor name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.
        OtherContactInfo:
          type: object
          description: List of ContactInfo entities of any contact info type.
          # $ref: '#/components/schemas/ContactInfo
        APAccountRef:
          type: object
          description: Identifies the accounts payable account to be used for this supplier. Each supplier must have his own AP account. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Query the Account name list resource to determine the appropriate Account object for this reference. Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TermRef:
          type: object
          description: Reference to a default Term associated with this Vendor object. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for TermRef.value and TermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        Source:
          type: string
          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include- QBCommerce
        GSTIN:
          type: string
          description: GSTIN is an identification number assigned to every GST registered business.
        T4AEligible:
          type: string
          description: True if vendor is T4A eligible. Valid for CA locale
        Fax:
          type: object
          description: Fax number
          $ref: '#/components/schemas/TelephoneNumber'
        BusinessNumber:
          type: string
          description: Also called, PAN (in India) is a code that acts as an identification for individuals, families and corporates, especially for those who pay taxes on their income.
        CurrencyRef:
          type: object
          description: Reference to the currency in which all amounts associated with this vendor are expressed. Once set, it cannot be changed. If specified currency is not currently in the company's currency list, it is added. If not specified, currency for this vendor is the home currency of the company, as defined by Preferences.CurrencyPrefs.HomeCurrency. Read-only after object is created.
          $ref: '#/components/schemas/CurrencyRefType'
        HasTPAR:
          type: boolean
          description: Indicate if the vendor has TPAR enabled. TPAR stands for Taxable Payments Annual Report. The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services. Some government entities also need to report the grants they have paid in a TPAR.
        TaxReportingBasis:
          type: string
          description: The method in which the supplier tracks their income. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Valid values include- Cash and Accrual.
        Mobile:
          type: object
          description: Mobile phone number
          $ref: '#/components/schemas/TelephoneNumber'
        PrimaryPhone:
          type: object
          description: Primary phone number
          $ref: '#/components/schemas/TelephoneNumber'
        Active:
          type: boolean
          description: If true, this object is currently enabled for use by QuickBooks.
        AlternatePhone:
          type: object
          description: Alternate phone number
          $ref: '#/components/schemas/TelephoneNumber'
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        Vendor1099:
          type: boolean
          description: This vendor is an independent contractor; someone who is given a 1099-MISC form at the end of the year. A 1099 vendor is paid with regular checks, and taxes are not withheld on their behalf.
        BillRate:
          type: number
          description: BillRate can be set to specify this vendor's hourly billing rate.
        WebAddr:
          type: object
          description: Website address.
          $ref: '#/components/schemas/WebSiteAddress'
        T5018Eligible:
          type: boolean
          description: True if vendor is T5018 eligible. Valid for CA locale
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        VendorPaymentBankDetail:
          type: object
          description: Vendor Payment Bank Detail.
          # $ref: '#/components/schemas/VendorPaymentBankDetail'
        TaxIdentifier:
          type: string
          description: The tax ID of the Person or Organization. The value is masked in responses, exposing only last four characters. For example, the ID of 123-45-6789 is returned as XXXXXXX6789.
        AcctNum:
          type: string
          description: Name or number of the account associated with this vendor.
        GSTRegistrationType:
          type: string
          description: For the filing of GSTR, transactions need to be classified depending on the type of vendor from whom the purchase is made. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-
            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).
            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.
            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.
            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.
            OVERSEAS Overseas. Customer who has a business which is located out of India.
            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.
            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.
        PrintOnCheckName:
          type: string
          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Cannot be removed with sparse update.
        BillAddr:
          type: object
          description: Default billing address
          $ref: '#/components/schemas/PhysicalAddress'
        Balance:
          type: number
          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create, read-only otherwise.
    InvoiceResponse:
      type: object
      properties:
        Invoice:
          $ref: '#/components/schemas/Invoice'
    InvoiceCreateObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Line:
          type: array
          description: >-
            Individual line items of a transaction. Valid Line types include
            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline
            Subtotal lines), DiscountLine and SubTotalLine (used for the overall
            transaction)
          items: { }
        CustomerRef:
          type: object
          description: >-
            Reference to a customer or job. Query the Customer name list
            resource to determine the appropriate Customer object for this
            reference. Use Customer.Id and Customer.DisplayName from that object
            for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: >-
            Version number of the object. It is used to lock an object for use
            by one app at a time. As soon as an application modifies an object,
            its SyncToken is incremented. Attempts to modify an object
            specifying an older SyncToken fails. Only the latest version of the
            object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: >-
            Reference to the currency in which all amounts on the associated
            transaction are expressed. This must be defined if multicurrency is
            enabled for the company. Multicurrency is enabled for the company if
            Preferences.MultiCurrencyEnabled is set to true. Read more about
            multicurrency support here. Applicable if multicurrency is enabled
            for the company.
          $ref: '#/components/schemas/CurrencyRefType'
        DocNumber:
          type: string
          description: >-
            Reference number for the transaction. If not explicitly provided at
            create time, this field is populated based on the setting of
            Preferences:CustomTxnNumber as follows- If
            Preferences:CustomTxnNumber is true a custom value can be provided.
            If no value is supplied, the resulting DocNumber is null. If
            Preferences:CustomTxnNumber is false, resulting DocNumber is system
            generated by incrementing the last number by 1. If
            Preferences:CustomTxnNumber is false then do not send a value as it
            can lead to unwanted duplicates. If a DocNumber value is sent for an
            Update operation, then it just updates that particular invoice and
            does not alter the internal system DocNumber. Note- DocNumber is an
            optional field for all locales except France. For France locale if
            Preferences:CustomTxnNumber is enabled it will not be automatically
            generated and is a required field. If a duplicate DocNumber needs to
            be supplied, add the query parameter name/value pair,
            include=allowduplicatedocnum to the URI.
        BillEmail:
          type: object
          description: >-
            Identifies the e-mail address where the invoice is sent. If
            EmailStatus=NeedToSend, BillEmailis a required input.
          $ref: '#/components/schemas/EmailAddress'
        TxnDate:
          type: string
          description: >-
            The date entered by the user when this transaction occurred.
            yyyy/MM/dd is the valid date format. For posting transactions, this
            is the posting date that affects the financial statements. If the
            date is not supplied, the current date on the server is used. Sort
            order is ASC by default.
        ShipFromAddr:
          type: object
          description: >-
            Identifies the address where the goods are shipped from. For
            transactions without shipping, it represents the address where the
            sale took place. For international addresses - countries should be
            passed as 3 ISO alpha-3 characters or the full name of the country.
            If a physical address is updated from within the transaction object,
            the QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ShipDate:
          type: string
          description: Date for delivery of goods or services.
        TrackingNum:
          type: string
          description: >-
            Shipping provider's tracking number for the delivery of the goods
            associated with the transaction.
        ClassRef:
          type: object
          description: >-
            Reference to the Class associated with the transaction. Available if
            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.
            Query the Class name list resource to determine the appropriate
            Class object for this reference. Use Class.Id and Class.Name from
            that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PrintStatus:
          type: string
          description: >-
            Printing status of the invoice. Valid values- NotSet, NeedToPrint,
            PrintComplete .
        SalesTermRef:
          type: object
          description: >-
            Reference to the sales term associated with the transaction. Query
            the Term name list resource to determine the appropriate Term object
            for this reference. Use Term.Id and Term.Name from that object for
            SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TxnSource:
          type: string
          description: >-
            Used internally to specify originating source of a credit card
            transaction.
        LinkedTxn:
          type: array
          description: >-
            Zero or more related transactions to this Invoice object. The
            following linked relationships are supported- Links to Estimate and
            TimeActivity objects can be established directly to this Invoice
            object with UI or with the API. Create, Read, Update, and Query
            operations are avaialble at the API level for these types of links.
            Only one link can be made to an Estimate. Progress Invoicing is not
            supported via the API. Links to expenses incurred on behalf of the
            customer are returned in the response with LinkedTxn.TxnType set to
            ReimburseCharge, ChargeCredit or StatementCharge corresponding to
            billable customer expenses of type Cash, Delayed Credit, and Delayed
            Charge, respectively. Links to these types of transactions are
            established within the QuickBooks UI, only, and are available as
            read-only at the API level. Links to payments applied to an Invoice
            object are returned in the response with LinkedTxn.TxnType set to
            Payment. Links to Payment transactions are established within the
            QuickBooks UI, only, and are available as read-only at the API
            level. Use LinkedTxn.TxnId as the ID in a separate read request for
            the specific resource to retrieve details of the linked object.
          items: { }
        DepositToAccountRef:
          type: object
          description: >-
            Account to which money is deposited. Query the Account name list
            resource to determine the appropriate Account object for this
            reference, where Account.AccountType is Other Current Asset or Bank.
            Use Account.Id and Account.Name from that object for
            DepositToAccountRef.value and DepositToAccountRef.name,
            respectively. Before you can use this field ensure that the company
            allows deposits in their invoices first. This can be found by
            querying the Preferences endpoint. SalesFormsPrefs.AllowDeposit must
            be equal to true. If you do not specify this account the payment is
            applied to the Undeposited Funds account.
          $ref: '#/components/schemas/ReferenceType'
        GlobalTaxCalculation:
          type: string
          description: >-
            Method in which tax is applied. Allowed values are- TaxExcluded,
            TaxInclusive, and NotApplicable.
        AllowOnlineACHPayment:
          type: boolean
          description: >-
            Specifies if this invoice can be paid with online bank transfers and
            corresponds to the Free bank transfer online payment check box on
            the QuickBooks UI. Active when
            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to
            true. If set to true, allow invoice to be paid with online bank
            transfers. The Free bank transfer online payment check box is
            checked on the QuickBooks UI for this invoice. If set to false,
            online bank transfers are not allowed. The Free bank transfer online
            payment check box is not checked on the QuickBooks UI for this
            invoice.
        TransactionLocationType:
          type: string
          description: >-
            The account location. For France locale valid values include-
            WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For UAE,
            valid values include ABUDHABI AJMAN SHARJAH DUBAI FUJAIRAH
            RAS_AL_KHAIMAH UMM_AL_QUWAIN OTHER_GCC
        DueDate:
          type: string
          description: >-
            Date when the payment of the transaction is due. If date is not
            provided, the number of days specified in SalesTermRef added the
            transaction date will be used.
        MetaData:
          type: object
          description: >-
            Descriptive information about the object. The MetaData values are
            set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        PrivateNote:
          type: string
          description: >-
            User entered, organization-private note about the transaction. This
            note does not appear on the invoice to the customer. This field maps
            to the Statement Memo field on the Invoice form in the QuickBooks
            Online UI.
        BillEmailCc:
          type: object
          description: >-
            Identifies the carbon copy e-mail address where the invoice is sent.
            If not specified, this field is populated from that defined in
            Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is
            invalid, carbon copy email is not sent.
          $ref: '#/components/schemas/EmailAddress'
        CustomerMemo:
          type: object
          description: >-
            User-entered message to the customer; this message is visible to end
            user on their transactions.
          $ref: '#/components/schemas/MemoRef'
        EmailStatus:
          type: string
          description: >-
            Email status of the invoice. Valid values- NotSet, NeedToSend,
            EmailSent
        ExchangeRate:
          type: number
          description: >-
            The number of home currency units it takes to equal one unit of
            currency specified by CurrencyRef. Applicable if multicurrency is
            enabled for the company.
        Deposit:
          type: number
          description: The deposit made towards this invoice.
        TxnTaxDetail:
          type: object
          description: >-
            This data type provides information for taxes charged on the
            transaction as a whole. It captures the details sales taxes
            calculated for the transaction based on the tax codes referenced by
            the transaction. This can be calculated by QuickBooks business logic
            or you may supply it when adding a transaction. See Global tax model
            for more information about this element. If sales tax is disabled
            (Preferences.TaxPrefs.UsingSalesTax is set to false) then
            TxnTaxDetail is ignored and not stored.
          # $ref: '#/components/schemas/TxnTaxDetail'
        AllowOnlineCreditCardPayment:
          type: boolean
          description: >-
            Specifies if online credit card payments are allowed for this
            invoice and corresponds to the Cards online payment check box on the
            QuickBooks UI. Active when
            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to
            true. If set to true, allow invoice to be paid with online credit
            card payments. The Cards online payment check box is checked on the
            QuickBooks UI. If set to false, online credit card payments are not
            allowed. The Cards online payment check box is not checked on the
            QuickBooks UI.
        CustomField:
          type: object
          description: >-
            One of, up to three custom fields for the transaction. Available for
            custom fields so configured for the company. Check
            Preferences.SalesFormsPrefs.CustomField and
            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields
            currenly configured. Click here to learn about managing custom
            fields.
          # $ref: '#/components/schemas/TxnTaxDetail'
        ShipAddr:
          type: object
          description: >-
            Identifies the address where the goods must be shipped. If
            ShipAddris not specified, and a default Customer:ShippingAddr is
            specified in QuickBooks for this customer, the default ship-to
            address will be used by QuickBooks. For international addresses -
            countries should be passed as 3 ISO alpha-3 characters or the full
            name of the country. If a physical address is updated from within
            the transaction object, the QuickBooks Online API flows individual
            address components differently into the Line elements of the
            transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and
            company name. Original Line1 through Line 5 contents, City,
            SubDivisionCode, and PostalCode flow into Line3 through Line5as a
            free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        DepartmentRef:
          type: object
          description: >-
            A reference to a Department object specifying the location of the
            transaction. Available if
            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.
            Query the Department name list resource to determine the appropriate
            department object for this reference. Use Department.Id and
            Department.Name from that object for DepartmentRef.value and
            DepartmentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        BillEmailBcc:
          type: object
          description: >-
            Identifies the blind carbon copy e-mail address where the invoice is
            sent. If not specified, this field is populated from that defined in
            Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is
            invalid, blind carbon copy email is not sent.
          $ref: '#/components/schemas/EmailAddress'
        ShipMethodRef:
          type: object
          description: >-
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          type: object
          description: >-
            Bill-to address of the Invoice. If BillAddris not specified, and a
            default Customer:BillingAddr is specified in QuickBooks for this
            customer, the default bill-to address is used by QuickBooks. For
            international addresses - countries should be passed as 3 ISO
            alpha-3 characters or the full name of the country. If a physical
            address is updated from within the transaction object, the
            QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings. Starting
            minorversion=54 if you update the CustomerRef, the address passed
            using BillAddr will be honored.
          $ref: '#/components/schemas/PhysicalAddress'
        ApplyTaxAfterDiscount:
          type: boolean
          description: >-
            If false or null, calculate the sales tax first, and then apply the
            discount. If true, subtract the discount first and then calculate
            the sales tax.
        FreeFormAddress:
          type: boolean
          description: >-
            Denotes how ShipAddr is stored- formatted or unformatted. The value
            of this flag is system defined based on format of shipping address
            at object create time. If set to false, shipping address is returned
            in a formatted style using City, Country, CountrySubDivisionCode,
            Postal code. If set to true, shipping address is returned in an
            unformatted style using Line1 through Line5 attributes.
      required:
        - "Line"
        - "CustomerRef"

    SalesItemLineDetail:
      type: object
      properties:
        Qty:
          type: number
          description: The quantity of the item.
        UnitPrice:
          type: number
          description: The price of a single unit of the item.
        ItemRef:
          $ref: '#/components/schemas/ReferenceType'
        Description:
          type: string
          description: A description of the line item.
    DiscountLineDetail:
      type: object
      properties:
        ClassRef:
          $ref: '#/components/schemas/ReferenceType'
        TaxCodeRef:
          $ref: '#/components/schemas/ReferenceType'
        DiscountAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        PercentBased:
          type: boolean
          description: If true, the discount is a percentage of the total amount. If false, the discount is a fixed amount.
        DiscountPercent:
          type: number
          description: The percentage of the discount. This field is required if PercentBased is true.
    InvoiceLineItem:
      type: object
      description: Reference type
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Amount:
          type: number
          description: The total amount of the line item. This is the quantity multiplied by the unit price.
        Description:
          type: string
          description: A description of the line item.
        DetailType:
          type: string
          description: >-
            The type of detail for the line item. Valid values include
            SalesItemLineDetail.
          enum:
            - SalesItemLineDetail
            - GroupLineDetail
            - DescriptionOnly
            - DiscountLineDetail
            - SubTotalLineDetail
        SalesItemLineDetail:
          $ref: '#/components/schemas/SalesItemLineDetail'
        DiscountLineDetail:
          $ref: '#/components/schemas/DiscountLineDetail'
    Invoice:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Line:
          type: array
          description: >-
            Individual line items of a transaction. Valid Line types include
            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline
            Subtotal lines), DiscountLine and SubTotalLine (used for the overall
            transaction)
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        CustomerRef:
          type: object
          description: >-
            Reference to a customer or job. Query the Customer name list
            resource to determine the appropriate Customer object for this
            reference. Use Customer.Id and Customer.DisplayName from that object
            for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: >-
            Version number of the object. It is used to lock an object for use
            by one app at a time. As soon as an application modifies an object,
            its SyncToken is incremented. Attempts to modify an object
            specifying an older SyncToken fails. Only the latest version of the
            object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: >-
            Reference to the currency in which all amounts on the associated
            transaction are expressed. This must be defined if multicurrency is
            enabled for the company. Multicurrency is enabled for the company if
            Preferences.MultiCurrencyEnabled is set to true. Read more about
            multicurrency support here. Applicable if multicurrency is enabled
            for the company.
          $ref: '#/components/schemas/CurrencyRefType'
        DocNumber:
          type: string
          description: >-
            Reference number for the transaction. If not explicitly provided at
            create time, this field is populated based on the setting of
            Preferences:CustomTxnNumber as follows- If
            Preferences:CustomTxnNumber is true a custom value can be provided.
            If no value is supplied, the resulting DocNumber is null. If
            Preferences:CustomTxnNumber is false, resulting DocNumber is system
            generated by incrementing the last number by 1. If
            Preferences:CustomTxnNumber is false then do not send a value as it
            can lead to unwanted duplicates. If a DocNumber value is sent for an
            Update operation, then it just updates that particular invoice and
            does not alter the internal system DocNumber. Note- DocNumber is an
            optional field for all locales except France. For France locale if
            Preferences:CustomTxnNumber is enabled it will not be automatically
            generated and is a required field. If a duplicate DocNumber needs to
            be supplied, add the query parameter name/value pair,
            include=allowduplicatedocnum to the URI.
        BillEmail:
          type: object
          description: >-
            Identifies the e-mail address where the invoice is sent. If
            EmailStatus=NeedToSend, BillEmailis a required input.
          $ref: '#/components/schemas/EmailAddress'
        TxnDate:
          type: string
          description: >-
            The date entered by the user when this transaction occurred.
            yyyy/MM/dd is the valid date format. For posting transactions, this
            is the posting date that affects the financial statements. If the
            date is not supplied, the current date on the server is used. Sort
            order is ASC by default.
        ShipFromAddr:
          type: object
          description: >-
            Identifies the address where the goods are shipped from. For
            transactions without shipping, it represents the address where the
            sale took place. For international addresses - countries should be
            passed as 3 ISO alpha-3 characters or the full name of the country.
            If a physical address is updated from within the transaction object,
            the QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ShipDate:
          type: string
          description: Date for delivery of goods or services.
        TrackingNum:
          type: string
          description: >-
            Shipping provider's tracking number for the delivery of the goods
            associated with the transaction.
        ClassRef:
          type: object
          description: >-
            Reference to the Class associated with the transaction. Available if
            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.
            Query the Class name list resource to determine the appropriate
            Class object for this reference. Use Class.Id and Class.Name from
            that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PrintStatus:
          type: string
          description: >-
            Printing status of the invoice. Valid values- NotSet, NeedToPrint,
            PrintComplete .
        SalesTermRef:
          type: object
          description: >-
            Reference to the sales term associated with the transaction. Query
            the Term name list resource to determine the appropriate Term object
            for this reference. Use Term.Id and Term.Name from that object for
            SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TxnSource:
          type: string
          description: >-
            Used internally to specify originating source of a credit card
            transaction.
        LinkedTxn:
          type: array
          description: >-
            Zero or more related transactions to this Invoice object. The
            following linked relationships are supported- Links to Estimate and
            TimeActivity objects can be established directly to this Invoice
            object with UI or with the API. Create, Read, Update, and Query
            operations are avaialble at the API level for these types of links.
            Only one link can be made to an Estimate. Progress Invoicing is not
            supported via the API. Links to expenses incurred on behalf of the
            customer are returned in the response with LinkedTxn.TxnType set to
            ReimburseCharge, ChargeCredit or StatementCharge corresponding to
            billable customer expenses of type Cash, Delayed Credit, and Delayed
            Charge, respectively. Links to these types of transactions are
            established within the QuickBooks UI, only, and are available as
            read-only at the API level. Links to payments applied to an Invoice
            object are returned in the response with LinkedTxn.TxnType set to
            Payment. Links to Payment transactions are established within the
            QuickBooks UI, only, and are available as read-only at the API
            level. Use LinkedTxn.TxnId as the ID in a separate read request for
            the specific resource to retrieve details of the linked object.
          items: { }
        DepositToAccountRef:
          type: object
          description: >-
            Account to which money is deposited. Query the Account name list
            resource to determine the appropriate Account object for this
            reference, where Account.AccountType is Other Current Asset or Bank.
            Use Account.Id and Account.Name from that object for
            DepositToAccountRef.value and DepositToAccountRef.name,
            respectively. Before you can use this field ensure that the company
            allows deposits in their invoices first. This can be found by
            querying the Preferences endpoint. SalesFormsPrefs.AllowDeposit must
            be equal to true. If you do not specify this account the payment is
            applied to the Undeposited Funds account.
          $ref: '#/components/schemas/ReferenceType'
        GlobalTaxCalculation:
          type: string
          description: >-
            Method in which tax is applied. Allowed values are- TaxExcluded,
            TaxInclusive, and NotApplicable.
        AllowOnlineACHPayment:
          type: boolean
          description: >-
            Specifies if this invoice can be paid with online bank transfers and
            corresponds to the Free bank transfer online payment check box on
            the QuickBooks UI. Active when
            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to
            true. If set to true, allow invoice to be paid with online bank
            transfers. The Free bank transfer online payment check box is
            checked on the QuickBooks UI for this invoice. If set to false,
            online bank transfers are not allowed. The Free bank transfer online
            payment check box is not checked on the QuickBooks UI for this
            invoice.
        TransactionLocationType:
          type: string
          description: >-
            The account location. For France locale valid values include-
            WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For UAE,
            valid values include ABUDHABI AJMAN SHARJAH DUBAI FUJAIRAH
            RAS_AL_KHAIMAH UMM_AL_QUWAIN OTHER_GCC
        DueDate:
          type: string
          description: >-
            Date when the payment of the transaction is due. If date is not
            provided, the number of days specified in SalesTermRef added the
            transaction date will be used.
        MetaData:
          type: object
          description: >-
            Descriptive information about the object. The MetaData values are
            set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        PrivateNote:
          type: string
          description: >-
            User entered, organization-private note about the transaction. This
            note does not appear on the invoice to the customer. This field maps
            to the Statement Memo field on the Invoice form in the QuickBooks
            Online UI.
        BillEmailCc:
          type: object
          description: >-
            Identifies the carbon copy e-mail address where the invoice is sent.
            If not specified, this field is populated from that defined in
            Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is
            invalid, carbon copy email is not sent.
          $ref: '#/components/schemas/EmailAddress'
        CustomerMemo:
          type: object
          description: >-
            User-entered message to the customer; this message is visible to end
            user on their transactions.
          $ref: '#/components/schemas/MemoRef'
        EmailStatus:
          type: string
          description: >-
            Email status of the invoice. Valid values- NotSet, NeedToSend,
            EmailSent
        ExchangeRate:
          type: number
          description: >-
            The number of home currency units it takes to equal one unit of
            currency specified by CurrencyRef. Applicable if multicurrency is
            enabled for the company.
        Deposit:
          type: number
          description: The deposit made towards this invoice.
        TxnTaxDetail:
          type: object
          description: >-
            This data type provides information for taxes charged on the
            transaction as a whole. It captures the details sales taxes
            calculated for the transaction based on the tax codes referenced by
            the transaction. This can be calculated by QuickBooks business logic
            or you may supply it when adding a transaction. See Global tax model
            for more information about this element. If sales tax is disabled
            (Preferences.TaxPrefs.UsingSalesTax is set to false) then
            TxnTaxDetail is ignored and not stored.
          # $ref: '#/components/schemas/TxnTaxDetail'
        AllowOnlineCreditCardPayment:
          type: boolean
          description: >-
            Specifies if online credit card payments are allowed for this
            invoice and corresponds to the Cards online payment check box on the
            QuickBooks UI. Active when
            Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to
            true. If set to true, allow invoice to be paid with online credit
            card payments. The Cards online payment check box is checked on the
            QuickBooks UI. If set to false, online credit card payments are not
            allowed. The Cards online payment check box is not checked on the
            QuickBooks UI.
        CustomField:
          type: array
          description: >-
            One of, up to three custom fields for the transaction. Available for
            custom fields so configured for the company. Check
            Preferences.SalesFormsPrefs.CustomField and
            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields
            currenly configured. Click here to learn about managing custom
            fields.
          items: { }
          # $ref: '#/components/schemas/TxnTaxDetail'
        ShipAddr:
          type: object
          description: >-
            Identifies the address where the goods must be shipped. If
            ShipAddris not specified, and a default Customer:ShippingAddr is
            specified in QuickBooks for this customer, the default ship-to
            address will be used by QuickBooks. For international addresses -
            countries should be passed as 3 ISO alpha-3 characters or the full
            name of the country. If a physical address is updated from within
            the transaction object, the QuickBooks Online API flows individual
            address components differently into the Line elements of the
            transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and
            company name. Original Line1 through Line 5 contents, City,
            SubDivisionCode, and PostalCode flow into Line3 through Line5as a
            free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        DepartmentRef:
          type: object
          description: >-
            A reference to a Department object specifying the location of the
            transaction. Available if
            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.
            Query the Department name list resource to determine the appropriate
            department object for this reference. Use Department.Id and
            Department.Name from that object for DepartmentRef.value and
            DepartmentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        BillEmailBcc:
          type: object
          description: >-
            Identifies the blind carbon copy e-mail address where the invoice is
            sent. If not specified, this field is populated from that defined in
            Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is
            invalid, blind carbon copy email is not sent.
          $ref: '#/components/schemas/EmailAddress'
        ShipMethodRef:
          type: object
          description: >-
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          type: object
          description: >-
            Bill-to address of the Invoice. If BillAddris not specified, and a
            default Customer:BillingAddr is specified in QuickBooks for this
            customer, the default bill-to address is used by QuickBooks. For
            international addresses - countries should be passed as 3 ISO
            alpha-3 characters or the full name of the country. If a physical
            address is updated from within the transaction object, the
            QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings. Starting
            minorversion=54 if you update the CustomerRef, the address passed
            using BillAddr will be honored.
          $ref: '#/components/schemas/PhysicalAddress'
        ApplyTaxAfterDiscount:
          type: boolean
          description: >-
            If false or null, calculate the sales tax first, and then apply the
            discount. If true, subtract the discount first and then calculate
            the sales tax.
        HomeBalance:
          type: number
          description: >-
            Convenience field containing the amount in Balance expressed in
            terms of the home currency. Calculated by QuickBooks business logic.
            Value is valid only when CurrencyRef is specified and available when
            endpoint is evoked with the minorversion=3 query parameter.
            Applicable if multicurrency is enabled for the company
        DeliveryInfo:
          type: object
          description: >-
            Email delivery information. Returned when a request has been made to
            deliver email with the send operation.
          # $ref: '#/components/schemas/DeliveryInfo'
        TotalAmt:
          type: number
          description: >-
            Indicates the total amount of the transaction. This includes the
            total of all the charges, allowances, and taxes. Calculated by
            QuickBooks business logic; any value you supply is over-written by
            QuickBooks.
        InvoiceLink:
          type: string
          description: >-
            Sharable link for the invoice sent to external customers. The link
            is generated only for invoices with online payment enabled and
            having a valid customer email address. Include query param
            `include=invoiceLink` to get the link back on query response.
        RecurDataRef:
          type: object
          description: >-
            A reference to the Recurring Transaction. It captures what recurring
            transaction template the Invoice was created from.
          $ref: '#/components/schemas/ReferenceType'
        TaxExemptionRef:
          type: object
          description: >-
            Reference to the TaxExepmtion ID associated with this object.
            Available for companies that have automated sales tax enabled.
            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which
            this object is associated. This Id is typically issued by the state.
            TaxExemptionRef.value- The system-generated Id of the exemption
            type.
          $ref: '#/components/schemas/ReferenceType'
        Balance:
          type: number
          description: >-
            The balance reflecting any payments made against the transaction.
            Initially set to the value of TotalAmt. A Balance of 0 indicates the
            invoice is fully paid. Calculated by QuickBooks business logic; any
            value you supply is over-written by QuickBooks.
        HomeTotalAmt:
          type: number
          description: >-
            Total amount of the transaction in the home currency. Includes the
            total of all the charges, allowances and taxes. Calculated by
            QuickBooks business logic. Value is valid only when CurrencyRef is
            specified. Applicable if multicurrency is enabled for the company.
        FreeFormAddress:
          type: boolean
          description: >-
            Denotes how ShipAddr is stored- formatted or unformatted. The value
            of this flag is system defined based on format of shipping address
            at object create time. If set to false, shipping address is returned
            in a formatted style using City, Country, CountrySubDivisionCode,
            Postal code. If set to true, shipping address is returned in an
            unformatted style using Line1 through Line5 attributes.
    MemoRef:
      type: object
      properties:
        value:
          type: string
          description: >-
            User-entered message to the customer; this message is visible to the
            end user on their transactions.
    EstimateResponse:
      type: object
      properties:
        Estimate:
          $ref: '#/components/schemas/Estimate'
    EstimateCreateObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        CustomerRef:
          type: object
          description: >-
            Reference to a customer or job. Query the Customer name list
            resource to determine the appropriate Customer object for this
            reference. Use Customer.Id and Customer.DisplayName from that object
            for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: >-
            Version number of the object. It is used to lock an object for use
            by one app at a time. As soon as an application modifies an object,
            its SyncToken is incremented. Attempts to modify an object
            specifying an older SyncToken fails. Only the latest version of the
            object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: >-
            Reference to the currency in which all amounts on the associated
            transaction are expressed. This must be defined if multicurrency is
            enabled for the company. Multicurrency is enabled for the company if
            Preferences.MultiCurrencyEnabled is set to true. Read more about
            multicurrency support here. Required if multicurrency is enabled for
            the company.
          $ref: '#/components/schemas/CurrencyRefType'
        BillEmail:
          type: object
          description: >-
            Identifies the e-mail address where the estimate is sent. If
            EmailStatus=NeedToSend, BillEmailis a required input.
          $ref: '#/components/schemas/EmailAddress'
        TxnDate:
          type: string
          description: >-
            The date entered by the user when this transaction occurred. For
            posting transactions, this is the posting date that affects the
            financial statements. If the date is not supplied, the current date
            on the server is used. Sort order is ASC by default.
        ShipFromAddr:
          type: object
          description: >-
            Identifies the address where the goods are shipped from. For
            transactions without shipping, it represents the address where the
            sale took place. For international addresses - countries should be
            passed as 3 ISO alpha-3 characters or the full name of the country.
            If a physical address is updated from within the transaction object,
            the QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ShipDate:
          type: string
          description: Date for delivery of goods or services.
        ClassRef:
          type: object
          description: >-
            Reference to the Class associated with the transaction. Available if
            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.
            Query the Class name list resource to determine the appropriate
            Class object for this reference. Use Class.Id and Class.Name from
            that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PrintStatus:
          type: string
          description: >-
            Printing status of the invoice. Valid values- NotSet, NeedToPrint,
            PrintComplete .
        CustomField:
          type: object
          description: >-
            One of, up to three custom fields for the transaction. Available for
            custom fields so configured for the company. Check
            Preferences.SalesFormsPrefs.CustomField and
            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields
            currenly configured. Click here to learn about managing custom
            fields.
        SalesTermRef:
          type: object
          description: >-
            Reference to the sales term associated with the transaction. Query
            the Term name list resource to determine the appropriate Term object
            for this reference. Use Term.Id and Term.Name from that object for
            SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TxnStatus:
          type: string
          description: >-
            One of the following status settings- Accepted, Closed, Pending,
            Rejected, Converted
        LinkedTxn:
          type: array
          description: >-
            Zero or more Invoice objects related to this transaction. Use
            LinkedTxn.TxnId as the ID in a separate Invoice read request to
            retrieve details of the linked object.
          items:
            $ref: '#/components/schemas/LinkedTxn'
        GlobalTaxCalculation:
          type: string
          description: >-
            TaxExcluded Method in which tax is applied. Allowed values are-
            TaxExcluded, TaxInclusive, and NotApplicable.
          enum:
            - ''
        AcceptedDate:
          type: string
          description: Date estimate was accepted.
        ExpirationDate:
          type: string
          description: Date by which estimate must be accepted before invalidation.
        TransactionLocationType:
          type: string
          description: >-
            The account location. Valid values include- - WithinFrance -
            FranceOverseas - OutsideFranceWithEU - OutsideEU - For France
            locales, only.
        DueDate:
          type: string
          description: >-
            Date when the payment of the transaction is due. If date is not
            provided, the number of days specified in SalesTermRef added the
            transaction date will be used.
        MetaData:
          type: object
          description: >-
            Descriptive information about the object. The MetaData values are
            set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        DocNumber:
          type: string
          description: >-
            Reference number for the transaction. If not explicitly provided at
            create time, this field is populated based on the setting of
            Preferences:CustomTxnNumber as follows- If
            Preferences:CustomTxnNumber is true a custom value can be provided.
            If no value is supplied, the resulting DocNumber is null. If
            Preferences:CustomTxnNumber is false, resulting DocNumber is system
            generated by incrementing the last number by 1. If
            Preferences:CustomTxnNumber is false then do not send a value as it
            can lead to unwanted duplicates. If a DocNumber value is sent for an
            Update operation, then it just updates that particular invoice and
            does not alter the internal system DocNumber. Note- DocNumber is an
            optional field for all locales except France. For France locale if
            Preferences:CustomTxnNumber is enabled it will not be automatically
            generated and is a required field.
        PrivateNote:
          type: string
          description: >-
            User entered, organization-private note about the transaction. This
            note does not appear on the invoice to the customer. This field maps
            to the Memo field on the Invoice form.
        Line:
          type: array
          description: >-
            Individual line items of a transaction. Valid Line types include-
            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline
            Subtotal lines), DiscountLine and SubTotalLine (used for the overall
            transaction)
          items: { }
        CustomerMemo:
          type: object
          description: >-
            User-entered message to the customer; this message is visible to end
            user on their transactions.
          $ref: '#/components/schemas/MemoRef'
        EmailStatus:
          type: string
          description: >-
            Email status of the invoice. Valid values- NotSet, NeedToSend,
            EmailSent
        TxnTaxDetail:
          type: object
          description: >-
            This data type provides information for taxes charged on the
            transaction as a whole. It captures the details sales taxes
            calculated for the transaction based on the tax codes referenced by
            the transaction. This can be calculated by QuickBooks business logic
            or you may supply it when adding a transaction. See Global tax model
            for more information about this element. If sales tax is disabled
            (Preferences.TaxPrefs.UsingSalesTax is set to false) then
            TxnTaxDetail is ignored and not stored.
        AcceptedBy:
          type: string
          description: Name of customer who accepted the estimate.
        ExchangeRate:
          type: number
          description: >-
            The number of home currency units it takes to equal one unit of
            currency specified by CurrencyRef. Applicable if multicurrency is
            enabled for the company.
        ShipAddr:
          type: object
          description: >-
            Identifies the address where the goods must be shipped. If
            ShipAddris not specified, and a default Customer:ShippingAddr is
            specified in QuickBooks for this customer, the default ship-to
            address will be used by QuickBooks. For international addresses -
            countries should be passed as 3 ISO alpha-3 characters or the full
            name of the country. If a physical address is updated from within
            the transaction object, the QuickBooks Online API flows individual
            address components differently into the Line elements of the
            transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and
            company name. Original Line1 through Line 5 contents, City,
            SubDivisionCode, and PostalCode flow into Line3 through Line5as a
            free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        DepartmentRef:
          type: object
          description: >-
            A reference to a Department object specifying the location of the
            transaction. Available if
            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.
            Query the Department name list resource to determine the appropriate
            department object for this reference. Use Department.Id and
            Department.Name from that object for DepartmentRef.value and
            DepartmentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        ShipMethodRef:
          type: object
          description: >-
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          type: object
          description: >-
            Bill-to address of the Invoice. If BillAddris not specified, and a
            default Customer:BillingAddr is specified in QuickBooks for this
            customer, the default bill-to address is used by QuickBooks. For
            international addresses - countries should be passed as 3 ISO
            alpha-3 characters or the full name of the country. If a physical
            address is updated from within the transaction object, the
            QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ApplyTaxAfterDiscount:
          type: boolean
          description: >-
            If false or null, calculate the sales tax first, and then apply the
            discount. If true, subtract the discount first and then calculate
            the sales tax.
        FreeFormAddress:
          type: boolean
          description: >-
            Denotes how ShipAddr is stored- formatted or unformatted. The value
            of this flag is system defined based on format of shipping address
            at object create time. If set to false, shipping address is returned
            in a formatted style using City, Country, CountrySubDivisionCode,
            Postal code. If set to true, shipping address is returned in an
            unformatted style using Line1 through Line5 attributes.
      required:
        - "CustomerRef"
    Estimate:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        CustomerRef:
          type: object
          description: >-
            Reference to a customer or job. Query the Customer name list
            resource to determine the appropriate Customer object for this
            reference. Use Customer.Id and Customer.DisplayName from that object
            for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: >-
            Version number of the object. It is used to lock an object for use
            by one app at a time. As soon as an application modifies an object,
            its SyncToken is incremented. Attempts to modify an object
            specifying an older SyncToken fails. Only the latest version of the
            object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: >-
            Reference to the currency in which all amounts on the associated
            transaction are expressed. This must be defined if multicurrency is
            enabled for the company. Multicurrency is enabled for the company if
            Preferences.MultiCurrencyEnabled is set to true. Read more about
            multicurrency support here. Required if multicurrency is enabled for
            the company.
          $ref: '#/components/schemas/CurrencyRefType'
        BillEmail:
          type: object
          description: >-
            Identifies the e-mail address where the estimate is sent. If
            EmailStatus=NeedToSend, BillEmailis a required input.
          $ref: '#/components/schemas/EmailAddress'
        TxnDate:
          type: string
          description: >-
            The date entered by the user when this transaction occurred. For
            posting transactions, this is the posting date that affects the
            financial statements. If the date is not supplied, the current date
            on the server is used. Sort order is ASC by default.
        ShipFromAddr:
          type: object
          description: >-
            Identifies the address where the goods are shipped from. For
            transactions without shipping, it represents the address where the
            sale took place. For international addresses - countries should be
            passed as 3 ISO alpha-3 characters or the full name of the country.
            If a physical address is updated from within the transaction object,
            the QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ShipDate:
          type: string
          description: Date for delivery of goods or services.
        ClassRef:
          type: object
          description: >-
            Reference to the Class associated with the transaction. Available if
            Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true.
            Query the Class name list resource to determine the appropriate
            Class object for this reference. Use Class.Id and Class.Name from
            that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PrintStatus:
          type: string
          description: >-
            Printing status of the invoice. Valid values- NotSet, NeedToPrint,
            PrintComplete .
        CustomField:
          type: object
          description: >-
            One of, up to three custom fields for the transaction. Available for
            custom fields so configured for the company. Check
            Preferences.SalesFormsPrefs.CustomField and
            Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields
            currenly configured. Click here to learn about managing custom
            fields.
        SalesTermRef:
          type: object
          description: >-
            Reference to the sales term associated with the transaction. Query
            the Term name list resource to determine the appropriate Term object
            for this reference. Use Term.Id and Term.Name from that object for
            SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TxnStatus:
          type: string
          description: >-
            One of the following status settings- Accepted, Closed, Pending,
            Rejected, Converted
        LinkedTxn:
          type: array
          description: >-
            Zero or more Invoice objects related to this transaction. Use
            LinkedTxn.TxnId as the ID in a separate Invoice read request to
            retrieve details of the linked object.
          items:
            $ref: '#/components/schemas/LinkedTxn'
        GlobalTaxCalculation:
          type: string
          description: >-
            TaxExcluded Method in which tax is applied. Allowed values are-
            TaxExcluded, TaxInclusive, and NotApplicable.
          enum:
            - ''
        AcceptedDate:
          type: string
          description: Date estimate was accepted.
        ExpirationDate:
          type: string
          description: Date by which estimate must be accepted before invalidation.
        TransactionLocationType:
          type: string
          description: >-
            The account location. Valid values include- - WithinFrance -
            FranceOverseas - OutsideFranceWithEU - OutsideEU - For France
            locales, only.
        DueDate:
          type: string
          description: >-
            Date when the payment of the transaction is due. If date is not
            provided, the number of days specified in SalesTermRef added the
            transaction date will be used.
        MetaData:
          type: object
          description: >-
            Descriptive information about the object. The MetaData values are
            set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        DocNumber:
          type: string
          description: >-
            Reference number for the transaction. If not explicitly provided at
            create time, this field is populated based on the setting of
            Preferences:CustomTxnNumber as follows- If
            Preferences:CustomTxnNumber is true a custom value can be provided.
            If no value is supplied, the resulting DocNumber is null. If
            Preferences:CustomTxnNumber is false, resulting DocNumber is system
            generated by incrementing the last number by 1. If
            Preferences:CustomTxnNumber is false then do not send a value as it
            can lead to unwanted duplicates. If a DocNumber value is sent for an
            Update operation, then it just updates that particular invoice and
            does not alter the internal system DocNumber. Note- DocNumber is an
            optional field for all locales except France. For France locale if
            Preferences:CustomTxnNumber is enabled it will not be automatically
            generated and is a required field.
        PrivateNote:
          type: string
          description: >-
            User entered, organization-private note about the transaction. This
            note does not appear on the invoice to the customer. This field maps
            to the Memo field on the Invoice form.
        Line:
          type: array
          description: >-
            Individual line items of a transaction. Valid Line types include-
            SalesItemLine, GroupLine, DescriptionOnlyLine (also used for inline
            Subtotal lines), DiscountLine and SubTotalLine (used for the overall
            transaction)
          items: { }
        CustomerMemo:
          type: object
          description: >-
            User-entered message to the customer; this message is visible to end
            user on their transactions.
          $ref: '#/components/schemas/MemoRef'
        EmailStatus:
          type: string
          description: >-
            Email status of the invoice. Valid values- NotSet, NeedToSend,
            EmailSent
        TxnTaxDetail:
          type: object
          description: >-
            This data type provides information for taxes charged on the
            transaction as a whole. It captures the details sales taxes
            calculated for the transaction based on the tax codes referenced by
            the transaction. This can be calculated by QuickBooks business logic
            or you may supply it when adding a transaction. See Global tax model
            for more information about this element. If sales tax is disabled
            (Preferences.TaxPrefs.UsingSalesTax is set to false) then
            TxnTaxDetail is ignored and not stored.
        AcceptedBy:
          type: string
          description: Name of customer who accepted the estimate.
        ExchangeRate:
          type: number
          description: >-
            The number of home currency units it takes to equal one unit of
            currency specified by CurrencyRef. Applicable if multicurrency is
            enabled for the company.
        ShipAddr:
          type: object
          description: >-
            Identifies the address where the goods must be shipped. If
            ShipAddris not specified, and a default Customer:ShippingAddr is
            specified in QuickBooks for this customer, the default ship-to
            address will be used by QuickBooks. For international addresses -
            countries should be passed as 3 ISO alpha-3 characters or the full
            name of the country. If a physical address is updated from within
            the transaction object, the QuickBooks Online API flows individual
            address components differently into the Line elements of the
            transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and
            company name. Original Line1 through Line 5 contents, City,
            SubDivisionCode, and PostalCode flow into Line3 through Line5as a
            free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        DepartmentRef:
          type: object
          description: >-
            A reference to a Department object specifying the location of the
            transaction. Available if
            Preferences.AccountingInfoPrefs.TrackDepartments is set to true.
            Query the Department name list resource to determine the appropriate
            department object for this reference. Use Department.Id and
            Department.Name from that object for DepartmentRef.value and
            DepartmentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        ShipMethodRef:
          type: object
          description: >-
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
            Reference to the ShipMethod associated with the transaction. There
            is no shipping method list. Reference resolves to a string.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          type: object
          description: >-
            Bill-to address of the Invoice. If BillAddris not specified, and a
            default Customer:BillingAddr is specified in QuickBooks for this
            customer, the default bill-to address is used by QuickBooks. For
            international addresses - countries should be passed as 3 ISO
            alpha-3 characters or the full name of the country. If a physical
            address is updated from within the transaction object, the
            QuickBooks Online API flows individual address components
            differently into the Line elements of the transaction response then
            when the transaction was first created- Line1 and Line2 elements are
            populated with the customer name and company name. Original Line1
            through Line 5 contents, City, SubDivisionCode, and PostalCode flow
            into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        ApplyTaxAfterDiscount:
          type: boolean
          description: >-
            If false or null, calculate the sales tax first, and then apply the
            discount. If true, subtract the discount first and then calculate
            the sales tax.
        TotalAmt:
          type: number
          description: >-
            Indicates the total amount of the transaction. This includes the
            total of all the charges, allowances, and taxes. Calculated by
            QuickBooks business logic; any value you supply is over-written by
            QuickBooks.
        RecurDataRef:
          type: object
          description: >-
            A reference to the Recurring Transaction. It captures what recurring
            transaction template the Estimate was created from.
          $ref: '#/components/schemas/ReferenceType'
        TaxExemptionRef:
          type: object
          description: >-
            Reference to the TaxExepmtion ID associated with this object.
            Available for companies that have automated sales tax enabled.
            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which
            this object is associated. This Id is typically issued by the state.
            TaxExemptionRef.value- The system-generated Id of the exemption
            type.
          $ref: '#/components/schemas/ReferenceType'
        HomeTotalAmt:
          type: number
          description: >-
            Total amount of the transaction in the home currency. Includes the
            total of all the charges, allowances and taxes. Calculated by
            QuickBooks business logic. Value is valid only when CurrencyRef is
            specified. Applicable if multicurrency is enabled for the company.
        FreeFormAddress:
          type: boolean
          description: >-
            Denotes how ShipAddr is stored- formatted or unformatted. The value
            of this flag is system defined based on format of shipping address
            at object create time. If set to false, shipping address is returned
            in a formatted style using City, Country, CountrySubDivisionCode,
            Postal code. If set to true, shipping address is returned in an
            unformatted style using Line1 through Line5 attributes.
    EmailAddress:
      type: object
      description: Email address
      properties:
        Address:
          type: string
          description: An email address. The address format must follow the RFC 822 standard.
    PaymentResponse:
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Payment'
    PaymentCreateObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        TotalAmt:
          type: number
          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.
        CustomerRef:
          type: object
          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.
            Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here. Required if multicurrency is enabled for the company.
          $ref: '#/components/schemas/CurrencyRefType'
        PrivateNote:
          type: string
          description: User entered, organization-private note about the transaction.
        PaymentMethodRef:
          type: object
          description: Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference.
            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        DepositToAccountRef:
          type: object
          description: Identifies the account to be used for this payment. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepostiToAccountRef.name, respectively.
            If you do not specify this account, payment is applied to the Undeposited Funds account.
        ExchangeRate:
          type: number
          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company
        Line:
          type: array
          description: Zero or more transactions accounting for this payment. Values for Line.LinkedTxn.TxnTypecan be one of the following-
            - Expense--Payment is reimbursement for expense paid by cash made on behalf of the customer
            - Check--Payment is reimbursement for expense paid by check made on behalf of the customer
            - CreditCardCredit--Payment is reimbursement for a credit card credit made on behalf of the customer
            - JournalEntry--Payment is linked to the representative journal entry
            - CreditMemo--Payment is linked to the credit memo the customer has with the business
            - Invoice--The invoice to which payment is applied
            - Use Line.LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.
          items:
            oneOf:
              - $ref: '#/components/schemas/ItemBasedExpenseLine'
              - $ref: '#/components/schemas/AccountBasedExpenseLine'
        TxnSource:
          type: string
          description: Used internally to specify originating source of a credit card transaction.
        ARAccountRef:
          type: object
          description: Specifies the accounts receivable account associated with this payment.
            Query the Account name list resource to determine the appropriate Account object for this reference.
            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.
            The specified account must have Account.AccountType set to Accounts Receivable.
          $ref: '#/components/schemas/ReferenceType'
        TxnDate:
          type: string
          description: The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.
            Sort order is ASC by default.
        CreditCardPayment:
          type: object
          description: Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.
          ############
        TransactionLocationType:
          type: string
          description: The account location. Valid values include-
            WithinFrance
            FranceOverseas
            OutsideFranceWithEU
            OutsideEU
            For France locales, only.
        MetaData:
          type: object
          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        PaymentRefNum:
          type: string
          description: The reference number for the payment received.
            For example, Â Check number for a check, envelope number for a cash donation. Required for France locales.
      required:
        - "TotalAmt"
        - "CustomerRef"
    Payment:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        TotalAmt:
          type: number
          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.
        CustomerRef:
          type: object
          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company.
            Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here. Required if multicurrency is enabled for the company.
          $ref: '#/components/schemas/CurrencyRefType'
        PrivateNote:
          type: string
          description: User entered, organization-private note about the transaction.
        PaymentMethodRef:
          type: object
          description: Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference.
            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        UnappliedAmt:
          type: number
          description: Indicates the amount that has not been applied to pay amounts owed for sales transactions.
        DepositToAccountRef:
          type: object
          description: Identifies the account to be used for this payment. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepostiToAccountRef.name, respectively.
            If you do not specify this account, payment is applied to the Undeposited Funds account.
        ExchangeRate:
          type: number
          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company
        Line:
          type: array
          description: Zero or more transactions accounting for this payment. Values for Line.LinkedTxn.TxnTypecan be one of the following-
            - Expense--Payment is reimbursement for expense paid by cash made on behalf of the customer
            - Check--Payment is reimbursement for expense paid by check made on behalf of the customer
            - CreditCardCredit--Payment is reimbursement for a credit card credit made on behalf of the customer
            - JournalEntry--Payment is linked to the representative journal entry
            - CreditMemo--Payment is linked to the credit memo the customer has with the business
            - Invoice--The invoice to which payment is applied
            - Use Line.LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.
          items:
            oneOf:
              - $ref: '#/components/schemas/ItemBasedExpenseLine'
              - $ref: '#/components/schemas/AccountBasedExpenseLine'
        TxnSource:
          type: string
          description: Used internally to specify originating source of a credit card transaction.
        ARAccountRef:
          type: object
          description: Specifies the accounts receivable account associated with this payment.
            Query the Account name list resource to determine the appropriate Account object for this reference.
            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.
            The specified account must have Account.AccountType set to Accounts Receivable.
          $ref: '#/components/schemas/ReferenceType'
        TxnDate:
          type: string
          description: The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.
            Sort order is ASC by default.
        CreditCardPayment:
          type: object
          description: Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.
          ############
        TransactionLocationType:
          type: string
          description: The account location. Valid values include-
            WithinFrance
            FranceOverseas
            OutsideFranceWithEU
            OutsideEU
            For France locales, only.
        MetaData:
          type: object
          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        PaymentRefNum:
          type: string
          description: The reference number for the payment received.
            For example, Â Check number for a check, envelope number for a cash donation. Required for France locales.
        TaxExemptionRef:
          type: object
          description: Reference to the TaxExepmtion ID associated with this object. Available for companies that have automated sales tax enabled.
            TaxExemptionRef.Name- The Tax Exemption Id for the customer to which this object is associated. This Id is typically issued by the state.
            TaxExemptionRef.value- The system-generated Id of the exemption type.
          $ref: '#/components/schemas/ReferenceType'
    CurrencyRefType:
      type: object
      description: Currency reference type
      properties:
        value:
          type: string
          description: A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.
        name:
          type: string
          description: The full name of the currency.
    BillResponse:
      type: object
      properties:
        Bill:
          $ref: '#/components/schemas/Bill'
    BillCreateObject:
      type: object
      properties:
        VendorRef:
          type: object
          description: Reference to the vendor for this transaction.
            Query the Vendor name list resource to determine the appropriate Vendor object for this reference.
            Use Vendor.Id and Vendor.Name from that object for VendorRef.value and VendorRef.name, respectively.
          properties:
            value:
              type: string
              description: The ID for the referenced object as found in the Id field of the object payload.
                The context is set by the type of reference and is specific to the QuickBooks company file.
            name:
              type: string
              description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object.
                This varies by context and specific type of object referenced.
                For example, references to a Customer object use Customer.DisplayName to populate this field.
                Optionally returned in responses, implementation dependent.
        Line:
          type: array
          description: Individual line items of a transaction. Valid Line types include- ItemBasedExpenseLine and AccountBasedExpenseLine
          items:
            oneOf:
              - $ref: '#/components/schemas/ItemBasedExpenseLine'
              - $ref: '#/components/schemas/AccountBasedExpenseLine'
        CurrencyRef:
          type: object
          description: Reference to the currency in which all amounts on the associated transaction are expressed.
            - This must be defined if multicurrency is enabled for the company.
            - Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true.
            - Read more about multicurrency support here. Required if multicurrency is enabled for the company.
          $ref: '#/components/schemas/CurrencyRefType'
      required:
        - "VendorRef"
        - "Line"
    PhysicalAddress:
      type: object
      description: Physical address
      properties:
        Id:
          type: string
          description: Unique identifier of the QuickBooks object for the address, used for modifying the address.
        PostalCode:
          type: string
          description: Postal code. For example, zip code for USA and Canada
        City:
          type: string
          description: City name.
        Country:
          type: string
          description: Country name. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.
        Line5:
          type: string
          description: Fifth line of the address.
        Line4:
          type: string
          description: Fourth line of the address.
        Line3:
          type: string
          description: Third line of the address.
        Line2:
          type: string
          description: Second line of the address.
        Line1:
          type: string
          description: First line of the address.
        Lat:
          type: string
          description: Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.
        Long:
          type: string
          description: Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.
        CountrySubDivisionCode:
          type: string
          description: Region within a country. For example, state name for USA, province name for Canada.
    TelephoneNumber:
      type: object
      description: Telephone number
      properties:
        FreeFormNumber:
          type: string
          description: Specifies the telephone number in free form.

    ModificationMetaData:
      type: object
      description: Modification metadata
      properties:
        CreateTime:
          type: string
          description: Time the entity was created in the source domain.
        LastUpdatedTime:
          type: string
          description: Time the entity was last updated in the source domain.
    WebSiteAddress:
      type: object
      description: Website address
      properties:
        URI:
          type: string
          description: Uniform Resource Identifier for the web site.
    CustomerResponse:
      type: object
      properties:
        Customer:
          $ref: '#/components/schemas/Customer'
    CustomerCreateObject:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time.
            As soon as an application modifies an object, its SyncToken is incremented.
            Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        DisplayName:
          type: string
          description: The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects.
            Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.
        Title:
          type: string
          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        GivenName:
          type: string
          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        MiddleName:
          type: string
          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        Suffix:
          type: string
          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        FamilyName:
          type: string
          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        PrimaryEmailAddr:
          description: Primary email address.
          $ref: '#/components/schemas/EmailAddress'
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
        SecondaryTaxIdentifier:
          type: string
          description: Also called UTR No. in ( UK ) , CST Reg No. ( IN ) also represents the tax registration number of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.
        ARAccountRef:
          type: object
          description: Identifies the accounts receivable account to be used for this customer.
            Each customer must have his own AR account. Applicable for France companies,
            only. Available when endpoint is evoked with the minorversion=3 query parameter.
            Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Accounts Receivable.
            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        DefaultTaxCodeRef:
          type: object
          description: Reference to a default tax code associated with this Customer object.
            Reference is valid if Customer.Taxable is set to true; otherwise, it is ignored.
            If automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the default tax code is set by the system and can not be overridden.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PreferredDeliveryMethod:
          type: string
          description: Preferred delivery method. Values are Print, Email, or None.
        GSTIN:
          type: string
          description: GSTIN is an identification number assigned to every GST registered business.
        SalesTermRef:
          type: object
          description: Reference to a SalesTerm associated with this Customer object.
            Query the Term name list resource to determine the appropriate Term object for this reference.
            Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        CustomerTypeRef:
          type: object
          $ref: '#/components/schemas/CustomerTypeRefType'
        Fax:
          type: object
          description: Fax number.
          $ref: '#/components/schemas/TelephoneNumber'
        BillWithParent:
          type: boolean
          description: If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.
        Mobile:
          type: object
          description: Primary phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        PrimaryPhone:
          type: object
          description: Mobile phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        AlternatePhone:
          type: object
          description: Alternate phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        MetaData:
          type: object
          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        ParentRef:
          type: object
          description: A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list.
            Required for the create operation if this object is a sub-customer or Job.
            Query the Customer name list resource to determine the appropriate Customer object for this reference.
            Use Customer.Id and Customer.DisplayName from that object for ParentRef.value and ParentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        WebAddr:
          type: object
          description: Website address.
          $ref: '#/components/schemas/WebSiteAddress'
        ShipAddr:
          description: Default shipping address.
            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and company name.
            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        PaymentMethodRef:
          type: object
          description: Reference to a PaymentMethod associated with this Customer object.
            Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference.
            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          description: Default billing address.
            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and company name.
            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        Job:
          type: boolean
          description: If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
        Taxable:
          type: boolean
          description: If true, transactions for this customer are taxable. Default behavior with minor version 10 and above- true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.
        Notes:
          type: string
          description: Free form text describing the Customer.
        Active:
          type: boolean
          description: If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        Balance:
          type: number
          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.
        Source:
          type: string
          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include  QBCommerce
        PrimaryTaxIdentifier:
          type: string
          description: Also called Tax Reg. No in ( UK ) , ( CA ) , ( IN ) , ( AU ) represents the tax ID of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.
        GSTRegistrationType:
          type: string
          description: For the filing of GSTR, transactions need to be classified depending on the type of customer to whom the sale is done. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-
            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).
            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.
            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.
            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.
            OVERSEAS Overseas. Customer who has a business which is located out of India.
            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.
            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.
        PrintOnCheckName:
          type: string
          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints- Cannot be removed with sparse update.
        Level:
          type: integer
          description: Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels
        TaxExemptionReasonId:
          type: string
          description: The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company. Set TaxExemptionReasonId to one of the following-
            - Id   Reason
            1.  Federal government
            2.   State government
            3.   Local government
            4.   Tribal government
            5.   Charitable organization
            6.   Religious organization
            7.   Educational organization
            8.   Hospital
            9.  Resale
            10. Direct pay permit
            11. Multiple points of use
            12. Direct mail
            13. Agricultural production
            14. Industrial production / manufacturing
            15. Foreign diplomat
    CustomerTypeRefType:
      type: object
      description: >-
        Reference to the customer type assigned to a customer. This field is
        only returned if the customer is assigned a customer type.
      properties:
        value:
          type: string
          description: >-
            The unique numeric Id of the customer type. This maps to the
            CustomerType entity- CustomerType.Id.
    Customer:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time.
            As soon as an application modifies an object, its SyncToken is incremented.
            Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.
        DisplayName:
          type: string
          description: The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects.
            Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list- Title, GivenName, MiddleName, FamilyName, and Suffix.
        Title:
          type: string
          description: Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        GivenName:
          type: string
          description: Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        MiddleName:
          type: string
          description: Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        Suffix:
          type: string
          description: Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        FamilyName:
          type: string
          description: Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.
        PrimaryEmailAddr:
          description: Primary email address.
          $ref: '#/components/schemas/EmailAddress'
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
        SecondaryTaxIdentifier:
          type: string
          description: Also called UTR No. in ( UK ) , CST Reg No. ( IN ) also represents the tax registration number of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.
        ARAccountRef:
          type: object
          description: Identifies the accounts receivable account to be used for this customer.
            Each customer must have his own AR account. Applicable for France companies,
            only. Available when endpoint is evoked with the minorversion=3 query parameter.
            Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Accounts Receivable.
            Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        DefaultTaxCodeRef:
          type: object
          description: Reference to a default tax code associated with this Customer object.
            Reference is valid if Customer.Taxable is set to true; otherwise, it is ignored.
            If automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the default tax code is set by the system and can not be overridden.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PreferredDeliveryMethod:
          type: string
          description: Preferred delivery method. Values are Print, Email, or None.
        GSTIN:
          type: string
          description: GSTIN is an identification number assigned to every GST registered business.
        SalesTermRef:
          type: object
          description: Reference to a SalesTerm associated with this Customer object.
            Query the Term name list resource to determine the appropriate Term object for this reference.
            Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        CustomerTypeRef:
          type: object
          $ref: '#/components/schemas/CustomerTypeRefType'
        Fax:
          type: object
          description: Fax number.
          $ref: '#/components/schemas/TelephoneNumber'
        BillWithParent:
          type: boolean
          description: If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.
        Mobile:
          type: object
          description: Primary phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        PrimaryPhone:
          type: object
          description: Mobile phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        AlternatePhone:
          type: object
          description: Alternate phone number.
          $ref: '#/components/schemas/TelephoneNumber'
        MetaData:
          type: object
          description: Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        ParentRef:
          type: object
          description: A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list.
            Required for the create operation if this object is a sub-customer or Job.
            Query the Customer name list resource to determine the appropriate Customer object for this reference.
            Use Customer.Id and Customer.DisplayName from that object for ParentRef.value and ParentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        WebAddr:
          type: object
          description: Website address.
          $ref: '#/components/schemas/WebSiteAddress'
        ShipAddr:
          description: Default shipping address.
            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and company name.
            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        PaymentMethodRef:
          type: object
          description: Reference to a PaymentMethod associated with this Customer object.
            Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference.
            Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        BillAddr:
          description: Default billing address.
            If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created-
            Line1 and Line2 elements are populated with the customer name and company name.
            Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
          $ref: '#/components/schemas/PhysicalAddress'
        Job:
          type: boolean
          description: If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
        Taxable:
          type: boolean
          description: If true, transactions for this customer are taxable. Default behavior with minor version 10 and above- true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.
        Notes:
          type: string
          description: Free form text describing the Customer.
        Active:
          type: boolean
          description: If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        Balance:
          type: number
          description: Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.
        IsProject:
          type: boolean
          description: If true, indicates this is a Project.
        Source:
          type: string
          description: The Source type of the transactions created by QuickBooks Commerce. Valid values include  QBCommerce
        PrimaryTaxIdentifier:
          type: string
          description: Also called Tax Reg. No in ( UK ) , ( CA ) , ( IN ) , ( AU ) represents the tax ID of the Person or Organization. This value is masked in responses, exposing only last five characters. For example, the ID of 123-45-6789 is returned as XXXXXX56789.
        GSTRegistrationType:
          type: string
          description: For the filing of GSTR, transactions need to be classified depending on the type of customer to whom the sale is done. To facilitate this, we have introduced a new field as 'GST registration type'. Possible values are listed below-
            GST_REG_REG GST registered- Regular. Customer who has a business which is registered under GST and has a GSTIN (doesn’t include customers registered under composition scheme, as an SEZ or as EOU's, STP's EHTP's etc.).
            GST_REG_COMP GST registered-Composition. Customer who has a business which is registered under the composition scheme of GST and has a GSTIN.
            GST_UNREG GST unregistered. Customer who has a business which is not registered under GST and does not have a GSTIN.
            CONSUMER Consumer. Customer who is not registered under GST and is the final consumer of the service or product sold.
            OVERSEAS Overseas. Customer who has a business which is located out of India.
            SEZ SEZ. Customer who has a business which is registered under GST, has a GSTIN and is located in a SEZ or is a SEZ Developer.
            DEEMED Deemed exports- EOU's, STP's EHTP's etc. Customer who has a business which is registered under GST and falls in the category of companies (EOU's, STP's EHTP's etc.), to which supplies are made they are termed as deemed exports.
        PrintOnCheckName:
          type: string
          description: Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints- Cannot be removed with sparse update.
        FullyQualifiedName:
          type: string
          description: Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels.
        Level:
          type: integer
          description: Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels
        TaxExemptionReasonId:
          type: string
          description: The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company. Set TaxExemptionReasonId to one of the following-
            - Id   Reason
            1.  Federal government
            2.   State government
            3.   Local government
            4.   Tribal government
            5.   Charitable organization
            6.   Religious organization
            7.   Educational organization
            8.   Hospital
            9.  Resale
            10. Direct pay permit
            11. Multiple points of use
            12. Direct mail
            13. Agricultural production
            14. Industrial production / manufacturing
            15. Foreign diplomat

    Bill:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        VendorRef:
          type: object
          description: Reference to the vendor for this transaction.
            Query the Vendor name list resource to determine the appropriate Vendor object for this reference.
            Use Vendor.Id and Vendor.Name from that object for VendorRef.value and VendorRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        Line:
          type: array
          description: Individual line items of a transaction. Valid Line types include- ItemBasedExpenseLine and AccountBasedExpenseLine
          items:
            $ref: '#/components/schemas/AccountBasedExpenseLine'
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time.
            - As soon as an application modifies an object, its SyncToken is incremented.
            - Attempts to modify an object specifying an older SyncToken fails.
            - Only the latest version of the object is maintained by QuickBooks Online.
        CurrencyRef:
          type: object
          description: Reference to the currency in which all amounts on the associated transaction are expressed.
            - This must be defined if multicurrency is enabled for the company.
            - Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true.
            - Read more about multicurrency support here. Required if multicurrency is enabled for the company.
          $ref: '#/components/schemas/CurrencyRefType'
        TxnDate:
          type: string
          description: The date entered by the user when this transaction occurred.
            - For posting transactions, this is the posting date that affects the financial statements.
            - If the date is not supplied, the current date on the server is used.
            - Sort order is ASC by default.
        APAccountRef:
          type: object
          description: Specifies to which AP account the bill is credited. Query the Account name list resource to determine the appropriate Account object for this reference.
            - Use Account.Id and Account.Name from that object for APAccountRef.value and APAccountRef.name, respectively.
            - The specified account must have Account.Classification set to Liability and Account.AccountSubType set to AccountsPayable.
            - If the company has a single AP account, the account is implied. However, it is recommended that the AP Account be explicitly specified in all cases to prevent unexpected errors when relating transactions to each other.
          $ref: '#/components/schemas/ReferenceType'
        SalesTermRef:
          type: object
          description: Reference to the Term associated with the transaction.
            - Query the Term name list resource to determine the appropriate Term object for this reference.
            - Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        LinkedTxn:
          type: array
          description: Zero or more transactions linked to this Bill object. The LinkedTxn.TxnType can be set to PurchaseOrder, BillPaymentCheck or if using Minor Version 55 and above ReimburseCharge. Use LinkedTxn.TxnId as the ID of the transaction.
          items:
            $ref: '#/components/schemas/LinkedTxn'
        GlobalTaxCalculation:
          type: string
          description: Method in which tax is applied. Allowed values are- TaxExcluded, TaxInclusive, and NotApplicable.
          enum:
            - ""
        TotalAmt:
          type: number
          description: Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.
        TransactionLocationType:
          type: string
          description: The account location. Valid values include-
            - WithinFrance
            - FranceOverseas
            - OutsideFranceWithEU
            - OutsideEU
            * For France locales, only.
        DueDate:
          type: string
          description: Date when the payment of the transaction is due.
            If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        DocNumber:
          type: string
          description: Reference number for the transaction. If not explicitly provided at create time, a custom value can be provided.
            - If no value is supplied, the resulting DocNumber is null. Throws an error when duplicate DocNumber is sent in the request.
            - Recommended best practice- check the setting of Preferences:OtherPrefs before setting DocNumber.
            - If a duplicate DocNumber needs to be supplied, add the query parameter name/value pair, include=allowduplicatedocnum to the URI.
            - Sort order is ASC by default.
        PrivateNote:
          type: string
          description: User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer.
            This field maps to the Memo field on the Invoice form.
        TxnTaxDetail:
          type: object
          description: This data type provides information for taxes charged on the transaction as a whole.
            - It captures the details of all taxes calculated for the transaction based on the tax codes referenced by the transaction.
            - This can be calculated by QuickBooks business logic or you may supply it when adding a transaction.
            - If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored.
          ###########
        ExchangeRate:
          type: number
          description: The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company.
        DepartmentRef:
          type: object
          description: A reference to a Department object specifying the location of the transaction, as defined using location tracking in QuickBooks Online.
            Query the Department name list resource to determine the appropriate department object for this reference.
            Use Department.Id and Department.Name from that object for DepartmentRef.value and DepartmentRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        IncludeInAnnualTPAR:
          type: boolean
          description: Include the supplier in the annual TPAR. TPAR stands for Taxable Payments Annual Report.
            The TPAR is mandated by ATO to get the details payments that businesses make to contractors for providing services.
            Some government entities also need to report the grants they have paid in a TPAR.
        HomeBalance:
          type: number
          description: Convenience field containing the amount in Balance expressed in terms of the home currency.
            Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter.
            Applicable if multicurrency is enabled for the company.
        RecurDataRef:
          type: object
          description: A reference to the Recurring Transaction. It captures what recurring transaction template the Bill was created from.
          $ref: '#/components/schemas/ReferenceType'
        Balance:
          type: number
          description: The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt.
            A Balance of 0 indicates the bill is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.
    LinkedTxn:
      type: object
      properties:
        TxnId:
          type: string
          description: Transaction Id of the related transaction.
        TxnType:
          type: string
          description: Transaction type of the linked object.
        TxnLineId:
          type: string
          description: Required for Deposit and Bill entities.
            -The line number of a specific line of the linked transaction.
            - If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.
    AccountBasedExpenseLine:
      type: object
      properties:
        Id:
          type: string
          description: The Id of the line item. Its use in requests is as folllows -
            - If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.
            - If no Id is provided, the Idprovided is less than or equal to zero, or the Idprovided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.
            - Available in all objects that use lines and support the update operation.
        Amount:
          type: number
          description: The amount of the line item.
        DetailType:
          type: string
          description: Set to AccountBasedExpenseLineDetailfor this type of line.
          enum:
            - ""
        AccountBasedExpenseLineDetail:
          $ref: '#/components/schemas/AccountBasedExpenseLineDetail'
        LinkedTxn:
          type: array
          description: Zero or more PurchaseOrder transactions linked to this Bill object.
            The LinkedTxn.TxnType should always be set to PurchaseOrder. Use LinkedTxn.TxnId as the ID of the PurchaseOrder.
            When updating an existing Bill to link to a PurchaseOrder a new Line must be created.
            This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill Line.Id to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder.
          items:
            $ref: '#/components/schemas/LinkedTxn'
        Description:
          type: string
          description: Free form text description of the line item that appears in the printed record.
        LineNum:
          type: number
          description: Specifies the position of the line in the collection of transaction lines. Positive Integer.
    AccountBasedExpenseLineDetail:
      type: object
      description: ItemBasedExpenseLineDetail
      properties:
        TaxInclusiveAmt:
          type: number
          description: The total amount of the line item including tax. Constraints- Available when endpoint is evoked with the minorversion=1query parameter.
        TaxAmount:
          type: number
          description: Sales tax paid as part of the expense.
        AccountRef:
          type: object
          description: Reference to the Account. Query the Account name list resource to determine the appropriate Account object for this reference.
            Use Account.Id and Account.Name from that object for AccountRef.value and AccountRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        CustomerRef:
          type: object
          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference.
            Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PriceLevelRef:
          type: object
          description: Reference to the PriceLevel of the service or item for the line. Support for this element will be available in the coming months.
          $ref: '#/components/schemas/ReferenceType'
        ClassRef:
          type: object
          description: Reference to the Class associated with the expense. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true.
            Query the Class name list resource to determine the appropriate Class object for this reference.
            Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TaxCodeRef:
          type: object
          description: Reference to the TaxCodefor this item.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        MarkupInfo:
          type: object
          description: Reference to the TaxCodefor this item.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.
        BillableStatus:
          type: string
          description: The billable status of the expense. Valid values- Billable, NotBillable, HasBeenBilled
    ItemBasedExpenseLine:
      type: object
      properties:
        Id:
          type: string
          description: The Id of the line item. Its use in requests is as folllows -
            - If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.
            - If no Id is provided, the Idprovided is less than or equal to zero, or the Idprovided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.
            - Available in all objects that use lines and support the update operation.
        Amount:
          type: number
          description: The amount of the line item.
        DetailType:
          type: string
          description: Set to ItemBasedExpenseLineDetail for this type of line.
          enum:
            - ""
        ItemBasedExpenseLineDetail:
          $ref: '#/components/schemas/ItemBasedExpenseLineDetail'
        LinkedTxn:
          type: array
          description: Zero or more PurchaseOrder transactions linked to this Bill object.
            The LinkedTxn.TxnType should always be set to PurchaseOrder. Use LinkedTxn.TxnId as the ID of the PurchaseOrder.
            When updating an existing Bill to link to a PurchaseOrder a new Line must be created.
            This behavior matches the QuickBooks UI as it does not allow the linking of an existing line, but rather a new line must be added to link the PurchaseOrder. Over the API this is achieved by simply updating the Bill Line.Id to something new. This will ensure old bill line is deleted and the new line is linked to the PurchaseOrder.
          items:
            $ref: '#/components/schemas/LinkedTxn'
        Description:
          type: string
          description: Free form text description of the line item that appears in the printed record.
        LineNum:
          type: number
          description: Specifies the position of the line in the collection of transaction lines. Positive Integer.
    ItemBasedExpenseLineDetail:
      type: object
      description: Item Based Expense Line Detail
      properties:
        TaxInclusiveAmt:
          type: number
          description: The total amount of the line item including tax. Constraints- Available when endpoint is evoked with the minorversion=1query parameter.
        ItemRef:
          type: object
          description: Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference.
            - Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.
            - When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored.
            - For France locales- The account associated with the referenced Item object is looked up in the account category list.
            - If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.
            - If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.
            - If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.
          $ref: '#/components/schemas/ReferenceType'
        CustomerRef:
          type: object
          description: Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference.
            Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        PriceLevelRef:
          type: object
          description: Reference to the PriceLevel of the service or item for the line. Support for this element will be available in the coming months.
          $ref: '#/components/schemas/ReferenceType'
        ClassRef:
          type: object
          description: Reference to the Class associated with the expense. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true.
            Query the Class name list resource to determine the appropriate Class object for this reference.
            Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        TaxCodeRef:
          type: object
          description: Reference to the TaxCodefor this item.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.
          $ref: '#/components/schemas/ReferenceType'
        MarkupInfo:
          type: object
          description: Reference to the TaxCodefor this item.
            Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference.
            Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.
        BillableStatus:
          type: string
          description: The billable status of the expense. Valid values- Billable, NotBillable, HasBeenBilled
        Qty:
          type: number
          description: Number of items for the line.
        UnitPrice:
          type: number
          description: Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.
    AccountResponse:
      type: object
      properties:
        Account:
          $ref: '#/components/schemas/Account'
    Account:
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier for this object. Sort order is ASC by default.
        Name:
          type: string
          description: User recognizable name for the Account. Account.Name attribute must not contain double quotes (") or colon (:).
        SyncToken:
          type: string
          description: Version number of the object. It is used to lock an object for use by one app at a time.
            - As soon as an application modifies an object, its SyncToken is incremented.
            - Attempts to modify an object specifying an older SyncToken fails.
            - Only the latest version of the object is maintained by QuickBooks Online.
        AcctNum:
          type: string
          description: User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account.
            The Account.AcctNum attribute must not contain colon (:).
            * Name must be unique.
            * For French Locales -
            - Length must be between 6 and 20 characters
            - Must start with the account number from the master category list.
            - Name limited to alpha-numeric characters.
            * Max length for Account.AcctNum -
            - AU & CA- 20 characters.
            - US, UK & IN- 7 characters
        CurrencyRef:
          type: object
          description: Reference to the currency in which this account holds amounts.
          $ref: '#/components/schemas/CurrencyRefType'
        ParentRef:
          type: object
          description: Specifies the Parent AccountId if this represents a SubAccount.
          properties:
            value:
              type: string
              description: The ID for the referenced object as found in the Id field of the object payload.
                - The context is set by the type of reference and is specific to the QuickBooks company file.
            name:
              type: string
              description: An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object.
                - This varies by context and specific type of object referenced.
                - For example, references to a Customer object use Customer.DisplayName to populate this field.
                - Optionally returned in responses, implementation dependent.
        Description:
          type: string
          description: User entered description for the account, which may include user entered information to guide bookkeepers/accountants in deciding what journal entries to post to the account.
        Active:
          type: boolean
          description: Whether or not active inactive accounts may be hidden from most display purposes and may not be posted to.
        MetaData:
          type: object
          description: Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications.
          $ref: '#/components/schemas/ModificationMetaData'
        SubAccount:
          type: boolean
          description: Specifies whether this object represents a parent (false) or subaccount (true).
            - Note that accounts of these types - OpeningBalanceEquity, UndepositedFunds, RetainedEarnings, CashReceiptIncome, CashExpenditureExpense, ExchangeGainOrLoss cannot have a sub account and cannot be a sub account of another account.
        Classification:
          type: string
          description: The classification of an account. Not supported for non-posting accounts.
            - Valid values include- Asset, Equity, Expense, Liability, Revenue
        FullyQualifiedName:
          type: string
          description: Fully qualified name of the object; derived from Name and ParentRef.
            - The fully qualified name prepends the topmost parent, followed by each subaccount separated by colons and takes the form of Parent:Account1:SubAccount1:SubAccount2. System generated. Limited to 5 levels.
        TxnLocationType:
          type: string
          description: The account location.
            * Valid values include
            - WithinFrance
            - FranceOverseas
            - OutsideFranceWithEU
            - OutsideEU
            * For France locales, only.
        AccountType:
          type: string
          description: A detailed account classification that specifies the use of this account. The type is based on the Classification.
          enum:
            - ""
        CurrentBalanceWithSubAccounts:
          type: number
          description: Specifies the cumulative balance amount for the current Account and all its sub-accounts.
        AccountAlias:
          type: string
          description: A user friendly name for the account.
            - It must be unique across all account categories.
            - For example, if an account is created under category 211 with AccountAlias of Terrains, then the system does not allow creation of an account with same AccountAlias of Terrains for any other category except 211.
            - In other words, 211001 and 215001 accounts cannot have same AccountAlias because both belong to different account category.
            - For France locales, only.
        TaxCodeRef:
          type: object
          description: Reference to the default tax code used by this account. Tax codes are referenced by the TaxCode.
            - Id in the TaxCode object.
            - Available when endpoint is invoked with the minorversion=3 query parameter. For global locales, only.
          $ref: '#/components/schemas/ReferenceType'
        AccountSubType:
          type: string
          description: The account sub-type classification and is based on the AccountType value.
          enum:
            - ""
        CurrentBalance:
          type: number
          description: Specifies the balance amount for the current Account. Valid for Balance Sheet accounts.
    AccountCreateObject:
      type: object
      properties:
        Name:
          type: string
          description: User recognizable name for the Account.
            Account.Name attribute must not contain double quotes (") or colon (:).
        AcctNum:
          type: string
          description: User-defined account number to help the user in identifying the account within the chart-of-accounts and in deciding what should be posted to the account.
            The Account.AcctNum attribute must not contain colon (:).
            For France locales:Name must be unique.
            Length must be between 6 and 20 characters.
            Must start with the account number from the master category list.
            Name limited to alpha-numeric characters.
            Required for France locales.
        TaxCodeRef:
          type: string
          description: Reference to the default tax code used by this account.
            Tax codes are referenced by the TaxCode.
            Id in the TaxCode object.
            Available when endpoint is invoked with the minorversion=3 query parameter.
            For global locales, only.
            Required for France locales
        AccountType:
          type: string
          enum:
            - Accounts Receivable
          description: A detailed account classification that specifies the use of this account. The type is based on the Classification.
        AccountSubType:
          type: string
          description: The account sub-type classification and is based on the AccountType value.
      required:
        - "Name"

tags:
  - name: Account
    description: |-
      An Account object is a component of a Chart Of Accounts, and is part of a ledger. It is used to record a total monetary amount allocated against a specific use. Accounts are one of five basic types: asset, liability, revenue (income), expenses, or equity. Delete is achieved by setting the Active attribute to false in an object update request; thus, making it inactive. In this type of delete, the record is not permanently deleted, but is hidden for display purposes. References to inactive objects are left intact. 

      https://developer.intuit.com/docs/api/accounting/account
  - name: Attachable
    description: |
      https://developer.intuit.com/docs/api/accounting/attachable


      This page covers the Attachable, Upload, and Download resources used for attachment management. Attachments are supplemental information linked to a transaction or Item object. They can be files, notes, or a combination of both.

      In the case of file attachments, use an upload endpoint multipart request to upload the files to the QuickBooks attachment list and, optionally, to supply metadata for each via an attachable object. If meta data is not supplied with the upload request, the system creates it.
      In the case of a note, use the create attachable endpoint.
      For information about attachments, see the Attachments Developer Guide.
  - name: Batch
    description: |+
      https://developer.intuit.com/docs/api/accounting/batch

      The batch operation enables an application to perform multiple operations in a single request.  For example, in a single batch request an application can create a customer, update an invoice, and read an account.  Compared to multiple requests, a single batch request can improve an application's performance by decreasing network roundtrips and increasing throughput. The individual operations within a batch request are called BatchItemRequest objects.

  - name: Bill
    description: |+
      https://developer.intuit.com/docs/api/accounting/bill

      A Bill object is an AP transaction representing a request-for-payment from a third party for goods/services rendered and/or received.

  - name: BillPayment
    description: |-
      https://developer.intuit.com/docs/api/accounting/billpayment


      A BillPayment object represents the payment transaction for a bill that the business owner receives from a vendor for goods or services purchased from the vendor. QuickBooks Online supports bill payments through a credit card or a checking account. 
      BillPayment.TotalAmt is the total amount associated with this payment. This includes the total of all the payments from the payment line details. If TotalAmt is greater than the total on the lines being paid, the overpayment is treated as a credit and exposed as such on the QuickBooks UI. The total amount cannot be negative.
  - name: Budget
    description: |+
      https://developer.intuit.com/docs/api/accounting/budget

      The Budget endpoint allows you to retrieve the current state of budgets already set up in the user's company file. A budget allows for an amount to be assigned on a monthly, quarterly, or annual basis for a specific account or customer and are created to give a business measurable expense goals. This amount represents how much should be spent against that account or customer in the give time period.

  - name: ChangeDataCapture
    description: |-
      https://developer.intuit.com/docs/api/accounting/changedatacapture

      The change data capture (cdc) operation returns a list of objects that have changed since a specified time. This operation is for an app that periodically polls data services in order to refresh its local copy of object data. The app calls the cdc operation, specifying a comma separated list of object types and a date-time stamp specifying how far to look back. Data services returns all objects specified by entityList that have changed since the specified date-time. Look-back time can be up to 30 days.
  - name: Class
    description: |-
      https://developer.intuit.com/docs/api/accounting/class

      Class objects provide a way to track different segments of the business so they're not tied to a particular client or project. For example, you can define classes to break down the income and expenses for each business segment. Classes are available to the entire transaction or to individual detail lines of a transaction.

      Ref - https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/class_tracking
  - name: CompanyInfo
    description: |+
      https://developer.intuit.com/docs/api/accounting/companyinfo

      The CompanyInfo object contains basic company information. In QuickBooks, company info and preferences are displayed in the same place under preferences, so it may be confusing to figure out from user interface which fields may belong to this object. But in general, properties such as company addresses or name are considered company information. Some attributes may exist in both CompanyInfo and Preferences objects.

  - name: CreditMemo
    description: |+
      https://developer.intuit.com/docs/api/accounting/creditmemo

      The CreditMemo object is a financial transaction representing a refund or credit of payment or part of a payment for goods or services that have been sold.

  - name: Customer
    description: |+
      https://developer.intuit.com/docs/api/accounting/customer

      A customer is a consumer of the service or product that your business offers. The Customer object allows you to categorize customers according to your business requirements. To create a job, you must first create a customer and then create a job referencing that customer as a parent with the ParentRef attribute. Some areas a sub-customer/job can be used include:

      To track a job for the top-level customer, such as a kitchen remodel or bathroom remodel.
      Members of a team or league.
      Properties managed by a Homeowner Association or Property Management Company.
      See QuickBooks product documentation for more about sub-customers and jobs.

  - name: Department
    description: |-
      https://developer.intuit.com/docs/api/accounting/department

      The Department resource provides a way to track transactions based on physical locations such as stores, sales regions, or countries. As you create sales and expense transactions, consistently designate the department to which they belong.
  - name: Deposit
    description: |
      https://developer.intuit.com/docs/api/accounting/deposit


      A deposit object is a transaction that records one or more deposits of the following types:

      A customer payment, originally held in the Undeposited Funds account, into the Asset Account specified by the Deposit.DepositToAccountRef attribute. The Deposit.line.LinkedTxn element is used in this case to hold deposit information.
      A new, direct deposit specified by Deposit.Line.DepositLineDetail line detail.
  - name: Employee
    description: |-
      https://developer.intuit.com/docs/api/accounting/employee

      An Employee object represents a person working for the company.

      The DisplayName attribute must be unique.
      The GivenName, MiddleName, FamilyName, and PrintOnCheckName attributes must not contain a colon (:).
      The GivenName and FamilyName attributes are required.
      The PrimaryEmailAddress attribute must contain an at sign (@) and dot (.).
      The full complement of read, create, delete via deactivation (active=false), and update operations are available both with and without QuickBooks Payroll enabled. However, when Payroll is enabled, support for some attributes is limited:
      Title—Not supported when QuickBooks Payroll is enabled.
      Suffix—Not supported when QuickBooks Payroll is enabled.
      DisplayName —It’s read only when QuickBooks Payroll is enabled and a concatenation of GivenName MiddleName FamilyName.
      PrintOnCheckName—Not supported when QuickBooks Payroll is enabled.
      BillRate—Not supported when QuickBooks Payroll is enabled.
      SSN—Masked SSNs, as is returned in a response, cannot be passed in a request when QuickBooks Payroll is enabled. Code for this field must be removed before submitting.
  - name: Estimate
    description: |+
      https://developer.intuit.com/docs/api/accounting/estimate

      Estimate represents a proposal for a financial transaction from a business to a customer for goods or services proposed to be sold, including proposed pricing.

  - name: ExchangeRate
    description: |+
      https://developer.intuit.com/docs/api/accounting/exchangerate

      Applicable only for those companies that enable multicurrency, the exchangerate resource provides the ability to query and set exchange rates available to the QuickBooks Online company. This entity works in combination with the companycurrency entity and the Currency Center in the QuickBooks Online UI to manage exchange rates for the company.


  - name: Invoice
    description: |+
      https://developer.intuit.com/docs/api/accounting/invoice

      An Invoice represents a sales form where the customer pays for a product or service later.

  - name: Item
    description: |-
      https://developer.intuit.com/docs/api/accounting/item

      An item is a thing that your company buys, sells, or re-sells, such as products and services. An item is shown as a line on an invoice or other sales form.
  - name: JournalEntry
    description: |-
      https://developer.intuit.com/docs/api/accounting/journalentry

      JournalEntry is a transaction in which:

      There are at least one pair of lines, a debit and a credit, called distribution lines.
      Each distribution line has an account from the Chart of Accounts. Query the Account resource for a listing of the Chart of Accounts.
      The total of the debit column equals the total of the credit column.
      When you record a transaction with a JournalEntry object, the QuickBooks Online UI labels the transaction as JRNL in the register and as General Journal on reports that list transactions.
  - name: Payment
    description: |-
      https://developer.intuit.com/docs/api/accounting/payment

      A Payment object records a payment in QuickBooks. The payment can be applied for a particular customer against multiple Invoices and Credit Memos. It can also be created without any Invoice or Credit Memo, by just specifying an amount.
  - name: PaymentMethod
    description: |-
      https://developer.intuit.com/docs/api/accounting/paymentmethod

      The PaymentMethod resource provides the method of payment for received goods.
  - name: Preferences
    description: |+
      https://developer.intuit.com/docs/api/accounting/preferences

      The Preferences resource represents a set of company preferences that control application behavior in QuickBooks Online. They are mostly exposed as read-only through the Preferences endpoint with only a very small subset of them available as writable. Preferences are not necessarily honored when making requests via the QuickBooks API because a lot of them control UI behavior in the application and may not be applicable for apps.

      Business Rules

      The create operation is not supported.
      The read request retrieves all preferences. There is no notion of preference objects or object IDs.
      Update operations are supported for a limited subset of preferences.
      The Delete operation is not supported.
      Query is supported with sorting and filtering enabled for Metadata timestamp attributes. Pagination is not supported.
      OtherPrefs type is used as an extension mechanism to contain additional attributes as Name/Value pairs.

  - name: Purchase
    description: |-
      https://developer.intuit.com/docs/api/accounting/purchase

      A Purchase object represents an expense, such as a purchase made from a vendor. There are three types of purchases: Cash, Check, and Credit Card.

      Cash Purchase contains information regarding a payment made in cash.
      Check Purchase contains information regarding a payment made by check.
      Credit Card Purchase contains information regarding a payment made by credit card or refunded/credited back to a credit card.
  - name: PurchaseOrder
    description: |+
      https://developer.intuit.com/docs/api/accounting/purchaseorder

      The PurchaseOrder object is a non-posting transaction representing a request to purchase goods or services from a third party.

  - name: RefundReceipt
    description: |+
      https://developer.intuit.com/docs/api/accounting/refundreceipt

      A RefundReceipt object represents a refund to the customer for a product or service that was provided.

  - name: Reports
  - name: SalesReceipt
    description: |-
      https://developer.intuit.com/docs/api/accounting/salesreceipt

      A SalesReceipt object represents the sales receipt that is given to a customer. A sales receipt is similar to an invoice. However, for a sales receipt, payment is received as part of the sale of goods and services. The sales receipt specifies a deposit account where the customer's payment is deposited. If the deposit account is not specified, the Undeposited Account is used.
  - name: TaxAgency
    description: |+
      https://developer.intuit.com/docs/api/accounting/taxagency

      A TaxAgency object is associated with a tax rate and identifies the agency to which that tax rate applies, that is, the entity that collects those taxes.

  - name: TaxCode
    description: |-
      https://developer.intuit.com/docs/api/accounting/taxcode

      A TaxCode object is used to track the taxable or non-taxable status of products, services, and customers. You can assign a sales tax code to each of your products, services, and customers based on their taxable or non-taxable status. You can then use these codes to generate reports that provide information to the tax agencies about the taxable or non-taxable status of certain sales.
  - name: TaxRate
    description: |+
      https://developer.intuit.com/docs/api/accounting/taxrate

      A TaxRate object represents rate applied to calculate tax liability. Use the TaxService entity to create a taxrate. See Global tax model for more information about using TaxRate objects and the tax model in general.

  - name: TaxService
    description: |
      https://developer.intuit.com/docs/api/accounting/taxservice

      The TaxService resource allows you to perform the following actions:

      Create a new TaxCode object and specify a list of existing tax rates to be associated to that tax code. To retrieve a list of existing TaxCode objects, query the TaxCode resource.
      Create a new TaxRate object, dynamically. To retrieve a list of existing tax rates, query the TaxRate resource.
  - name: Term
    description: |
      https://developer.intuit.com/docs/api/accounting/term

      A Term object represents the terms under which a sale is made, typically expressed in the form of days due after the goods are received. Optionally, a discount of the total amount may be applied if payment is made within a stipulated time. For example, net 30 indicates that payment is due within 30 days. A term of 2%/15 net 60 indicates that payment is due within 60 days, with a discount of 2% if payment is made within 15 days. This resource also supports:

      An absolute due date.
      A number of days from a start date.
      A percent discount.
      An absolute discount.
  - name: TimeActivity
    description: |+
      https://developer.intuit.com/docs/api/accounting/timeactivity

      The TimeActivity object represents a record of time worked by a vendor or employee.

  - name: Transfer
    description: |+
      https://developer.intuit.com/docs/api/accounting/transfer

      A Transfer represents a transaction where funds are moved between two accounts from the company's QuickBooks chart of accounts.

  - name: Vendor
    description: |+
      https://developer.intuit.com/docs/api/accounting/vendor

      The Vendor object represents the seller from whom your company purchases any service or product.

  - name: VendorCredit
    description: |+
      https://developer.intuit.com/docs/api/accounting/vendorcredit


      The VendorCredit object is an accounts payable transaction that represents a refund or credit of payment for goods or services. It is a credit that a vendor owes you for various reasons such as overpaid bill, returned merchandise, or other reasons.

