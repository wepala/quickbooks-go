// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/wepala/quickbooks-go/api/core"
)

type PaymentmethodCreateRequest struct {
	Minorversion *string                             `json:"-" url:"minorversion,omitempty"`
	Active       *bool                               `json:"Active,omitempty" url:"-"`
	Id           *string                             `json:"Id,omitempty" url:"-"`
	MetaData     *PaymentmethodCreateRequestMetaData `json:"MetaData,omitempty" url:"-"`
	Name         *string                             `json:"Name,omitempty" url:"-"`
	SyncToken    *string                             `json:"SyncToken,omitempty" url:"-"`
	Type         *string                             `json:"Type,omitempty" url:"-"`
	Domain       *string                             `json:"domain,omitempty" url:"-"`
	Sparse       *bool                               `json:"sparse,omitempty" url:"-"`
}

type PaymentmethodReadbyidRequest struct {
	Minorversion *string `json:"-" url:"minorversion,omitempty"`
}

type PaymentmethodCreateRequestMetaData struct {
	CreateTime      *string `json:"CreateTime,omitempty" url:"CreateTime,omitempty"`
	LastUpdatedTime *string `json:"LastUpdatedTime,omitempty" url:"LastUpdatedTime,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *PaymentmethodCreateRequestMetaData) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PaymentmethodCreateRequestMetaData) UnmarshalJSON(data []byte) error {
	type unmarshaler PaymentmethodCreateRequestMetaData
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PaymentmethodCreateRequestMetaData(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PaymentmethodCreateRequestMetaData) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
