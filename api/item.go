// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/wepala/quickbooks-go/api/core"
)

type ItemCreateRequest struct {
	Active             *bool                               `json:"Active,omitempty" url:"-"`
	AssetAccountRef    *ItemCreateRequestAssetAccountRef   `json:"AssetAccountRef,omitempty" url:"-"`
	ExpenseAccountRef  *ItemCreateRequestExpenseAccountRef `json:"ExpenseAccountRef,omitempty" url:"-"`
	FullyQualifiedName *string                             `json:"FullyQualifiedName,omitempty" url:"-"`
	Id                 *string                             `json:"Id,omitempty" url:"-"`
	IncomeAccountRef   *ItemCreateRequestIncomeAccountRef  `json:"IncomeAccountRef,omitempty" url:"-"`
	InvStartDate       *string                             `json:"InvStartDate,omitempty" url:"-"`
	Name               *string                             `json:"Name,omitempty" url:"-"`
	PurchaseCost       *float64                            `json:"PurchaseCost,omitempty" url:"-"`
	QtyOnHand          *float64                            `json:"QtyOnHand,omitempty" url:"-"`
	SyncToken          *string                             `json:"SyncToken,omitempty" url:"-"`
	Taxable            *bool                               `json:"Taxable,omitempty" url:"-"`
	TrackQtyOnHand     *bool                               `json:"TrackQtyOnHand,omitempty" url:"-"`
	Type               *string                             `json:"Type,omitempty" url:"-"`
	UnitPrice          *float64                            `json:"UnitPrice,omitempty" url:"-"`
	Domain             *string                             `json:"domain,omitempty" url:"-"`
	Sparse             *bool                               `json:"sparse,omitempty" url:"-"`
}

type ItemCreateRequestAssetAccountRef struct {
	Name  *string `json:"name,omitempty" url:"name,omitempty"`
	Value *string `json:"value,omitempty" url:"value,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (i *ItemCreateRequestAssetAccountRef) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *ItemCreateRequestAssetAccountRef) UnmarshalJSON(data []byte) error {
	type unmarshaler ItemCreateRequestAssetAccountRef
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = ItemCreateRequestAssetAccountRef(value)

	extraProperties, err := core.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties

	i._rawJSON = json.RawMessage(data)
	return nil
}

func (i *ItemCreateRequestAssetAccountRef) String() string {
	if len(i._rawJSON) > 0 {
		if value, err := core.StringifyJSON(i._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type ItemCreateRequestExpenseAccountRef struct {
	Name  *string `json:"name,omitempty" url:"name,omitempty"`
	Value *string `json:"value,omitempty" url:"value,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (i *ItemCreateRequestExpenseAccountRef) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *ItemCreateRequestExpenseAccountRef) UnmarshalJSON(data []byte) error {
	type unmarshaler ItemCreateRequestExpenseAccountRef
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = ItemCreateRequestExpenseAccountRef(value)

	extraProperties, err := core.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties

	i._rawJSON = json.RawMessage(data)
	return nil
}

func (i *ItemCreateRequestExpenseAccountRef) String() string {
	if len(i._rawJSON) > 0 {
		if value, err := core.StringifyJSON(i._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type ItemCreateRequestIncomeAccountRef struct {
	Name  *string `json:"name,omitempty" url:"name,omitempty"`
	Value *string `json:"value,omitempty" url:"value,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (i *ItemCreateRequestIncomeAccountRef) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *ItemCreateRequestIncomeAccountRef) UnmarshalJSON(data []byte) error {
	type unmarshaler ItemCreateRequestIncomeAccountRef
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = ItemCreateRequestIncomeAccountRef(value)

	extraProperties, err := core.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties

	i._rawJSON = json.RawMessage(data)
	return nil
}

func (i *ItemCreateRequestIncomeAccountRef) String() string {
	if len(i._rawJSON) > 0 {
		if value, err := core.StringifyJSON(i._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}
