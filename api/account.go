// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/wepala/quickbooks-go/api/core"
)

type AccountCreateRequest struct {
	AccountSubType                *string                          `json:"AccountSubType,omitempty" url:"-"`
	AccountType                   *string                          `json:"AccountType,omitempty" url:"-"`
	Active                        *bool                            `json:"Active,omitempty" url:"-"`
	Classification                *string                          `json:"Classification,omitempty" url:"-"`
	CurrencyRef                   *AccountCreateRequestCurrencyRef `json:"CurrencyRef,omitempty" url:"-"`
	CurrentBalance                *float64                         `json:"CurrentBalance,omitempty" url:"-"`
	CurrentBalanceWithSubAccounts *float64                         `json:"CurrentBalanceWithSubAccounts,omitempty" url:"-"`
	FullyQualifiedName            *string                          `json:"FullyQualifiedName,omitempty" url:"-"`
	Id                            *string                          `json:"Id,omitempty" url:"-"`
	Name                          *string                          `json:"Name,omitempty" url:"-"`
	SubAccount                    *bool                            `json:"SubAccount,omitempty" url:"-"`
	SyncToken                     *string                          `json:"SyncToken,omitempty" url:"-"`
	Domain                        *string                          `json:"domain,omitempty" url:"-"`
	Sparse                        *bool                            `json:"sparse,omitempty" url:"-"`
}

type AccountCreateRequestCurrencyRef struct {
	Name  *string `json:"name,omitempty" url:"name,omitempty"`
	Value *string `json:"value,omitempty" url:"value,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (a *AccountCreateRequestCurrencyRef) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AccountCreateRequestCurrencyRef) UnmarshalJSON(data []byte) error {
	type unmarshaler AccountCreateRequestCurrencyRef
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AccountCreateRequestCurrencyRef(value)

	extraProperties, err := core.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties

	a._rawJSON = json.RawMessage(data)
	return nil
}

func (a *AccountCreateRequestCurrencyRef) String() string {
	if len(a._rawJSON) > 0 {
		if value, err := core.StringifyJSON(a._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}
